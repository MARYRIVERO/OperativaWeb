[{"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\index.js":"1","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\App.js":"2","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\reportWebVitals.js":"3","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\store.js":"4","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\index.js":"5","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\index.jsx":"6","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\auth\\auth.reducer.js":"7","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\dashboard\\dashboard.reducer.js":"8","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\utils\\utils.reducer.js":"9","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\applicant\\applicant.reducer.js":"10","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\ScrollTopRouter.jsx":"11","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\index.js":"12","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\index.js":"13","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\utils\\index.js":"14","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\dashboard\\index.js":"15","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\auth\\index.js":"16","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\applicant\\index.js":"17","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\routes\\index.js":"18","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Button\\index.js":"19","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Breadcrumbs\\index.js":"20","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Checkbox\\index.js":"21","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\LinearProgress\\index.js":"22","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Link\\index.js":"23","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Modal\\index.js":"24","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Radio\\index.js":"25","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Navigation\\index.js":"26","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\TextInput\\index.js":"27","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Chip\\index.js":"28","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Typography\\index.js":"29","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Select\\index.js":"30","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\DataGrid\\index.js":"31","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\session\\AppSession.js":"32","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\auth\\auth.action.js":"33","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\routes\\RouterOperativa.jsx":"34","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\images\\index.js":"35","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\menuRoutes\\index.js":"36","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\navigation\\index.js":"37","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\index.js":"38","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\index.js":"39","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\index.js":"40","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\index.js":"41","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\index.js":"42","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\sessionRoutes\\index.js":"43","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\index.js":"44","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\companySignUp.service.js":"45","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\municipalitySignUp.service.js":"46","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\applicantProfile.service.js":"47","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\applicantSignUp.service.js":"48","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\applicant\\applicantPublication.service.js":"49","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\dashboard\\dashboard.service.js":"50","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\business\\subuser.service.js":"51","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\admin\\user.service.js":"52","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\routes\\HomeRoutes.jsx":"53","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\routes\\HomeRouter.jsx":"54","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\routes\\ApplicantRoutes.jsx":"55","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\routes\\ApplicantRouter.jsx":"56","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\routes\\AdminRoutes.jsx":"57","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\routes\\AdminRouter.jsx":"58","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\routes\\DashboardRoutes.jsx":"59","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\routes\\DashboardRouter.jsx":"60","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\routes\\AuthRoutes.jsx":"61","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\routes\\AuthRouter.jsx":"62","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\index.js":"63","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\PrivateRoute.jsx":"64","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\user.service.js":"65","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\pages\\ShowPublication.jsx":"66","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\pages\\Applicant.jsx":"67","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\auth.service.js":"68","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\api\\index.js":"69","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\NewPassword.jsx":"70","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\RecoverPassword.jsx":"71","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantProfile.jsx":"72","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\CompanySignUp.jsx":"73","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantHome.jsx":"74","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantSignUp.jsx":"75","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\SignIn.jsx":"76","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\AccountType.jsx":"77","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Profile.jsx":"78","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\PositionDetails.jsx":"79","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Users.jsx":"80","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\ListPostulants.jsx":"81","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\ApplicantProfile.jsx":"82","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\EditPosition.jsx":"83","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Dashboard.jsx":"84","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\pages\\Home.jsx":"85","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\pages\\Requests.jsx":"86","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\pages\\Home.jsx":"87","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\utils.service.temp.js":"88","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\utils\\utils.action.js":"89","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\DataTableUser\\index.js":"90","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\utils.service.js":"91","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\constants\\jobManagementChartOptions.js":"92","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\dashboard\\dashboard.action.js":"93","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\index.js":"94","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\components\\index.js":"95","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\index.js":"96","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\index.js":"97","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\index.js":"98","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\images\\index.js":"99","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\hooks\\useForm\\index.js":"100","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\hooks\\index.js":"101","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\images\\index.js":"102","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\components\\index.js":"103","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\index.js":"104","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\images\\index.js":"105","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RequestRecoverSent\\index.js":"106","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RequestNewPasswordSent\\index.js":"107","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\DeleteSubUserModal\\index.js":"108","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\SubUserModal\\index.js":"109","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\ShowProfile\\index.js":"110","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\EditProfileForm\\index.js":"111","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\OpenPositionsTable\\index.js":"112","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\CustomCard\\index.js":"113","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\components\\ApplicantDataTable\\index.js":"114","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyNumbers.js":"115","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyLetters.js":"116","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyAlphaNumeric.js":"117","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isPhone.js":"118","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isEmailCorporate.js":"119","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isDni.js":"120","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isRuc.js":"121","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isEmail.js":"122","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\components\\RequestsDataTable\\index.js":"123","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\Footer\\index.js":"124","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\BusinessCarousel\\index.js":"125","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\applicant\\applicant.action.js":"126","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantAreasOfInterestForm\\index.js":"127","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\index.js":"128","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantEducationForm\\index.js":"129","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantContactInformationForm\\index.js":"130","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantPersonalDataForm\\index.js":"131","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\CompanyForm\\index.js":"132","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RepresentativeForm\\index.js":"133","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RegistrationCompleted\\index.js":"134","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\TermsAndConditionModal\\index.js":"135","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\TermsAndConditionModalEnterprise\\index.js":"136","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\validations\\index.js":"137","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WithExperienceComponent.js":"138","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WorkExperienceListComponent.js":"139","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WithoutExperienceComponent.js":"140","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\speciality.js":"141","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\academicLevels.js":"142","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\documentsTypes.js":"143","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\providers.js":"144","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Backdrop\\index.js":"145","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Autocomplete\\index.js":"146","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\RichText\\index.js":"147"},{"size":684,"mtime":1615234899944,"results":"148","hashOfConfig":"149"},{"size":250,"mtime":1615234899936,"results":"150","hashOfConfig":"149"},{"size":375,"mtime":1615234900584,"results":"151","hashOfConfig":"149"},{"size":1082,"mtime":1615234900640,"results":"152","hashOfConfig":"149"},{"size":512,"mtime":1615234900616,"results":"153","hashOfConfig":"149"},{"size":632,"mtime":1615493757515,"results":"154","hashOfConfig":"149"},{"size":1773,"mtime":1616447005463,"results":"155","hashOfConfig":"149"},{"size":2516,"mtime":1615234900608,"results":"156","hashOfConfig":"149"},{"size":3629,"mtime":1615338844804,"results":"157","hashOfConfig":"149"},{"size":904,"mtime":1615234900608,"results":"158","hashOfConfig":"149"},{"size":368,"mtime":1615234900592,"results":"159","hashOfConfig":"149"},{"size":80,"mtime":1615234900520,"results":"160","hashOfConfig":"149"},{"size":816,"mtime":1616619955790,"results":"161","hashOfConfig":"149"},{"size":819,"mtime":1615338844804,"results":"162","hashOfConfig":"149"},{"size":843,"mtime":1615234900640,"results":"163","hashOfConfig":"149"},{"size":303,"mtime":1616447005463,"results":"164","hashOfConfig":"149"},{"size":226,"mtime":1615234900640,"results":"165","hashOfConfig":"149"},{"size":230,"mtime":1615234900520,"results":"166","hashOfConfig":"149"},{"size":282,"mtime":1615234900528,"results":"167","hashOfConfig":"149"},{"size":1049,"mtime":1615234900528,"results":"168","hashOfConfig":"149"},{"size":395,"mtime":1615234900536,"results":"169","hashOfConfig":"149"},{"size":282,"mtime":1615234900544,"results":"170","hashOfConfig":"149"},{"size":254,"mtime":1615234900544,"results":"171","hashOfConfig":"149"},{"size":1388,"mtime":1615234900552,"results":"172","hashOfConfig":"149"},{"size":264,"mtime":1615234900552,"results":"173","hashOfConfig":"149"},{"size":9442,"mtime":1616620470084,"results":"174","hashOfConfig":"149"},{"size":274,"mtime":1615234900560,"results":"175","hashOfConfig":"149"},{"size":215,"mtime":1615234900536,"results":"176","hashOfConfig":"149"},{"size":284,"mtime":1615234900560,"results":"177","hashOfConfig":"149"},{"size":729,"mtime":1615234900560,"results":"178","hashOfConfig":"149"},{"size":1175,"mtime":1615393681865,"results":"179","hashOfConfig":"149"},{"size":772,"mtime":1615235350928,"results":"180","hashOfConfig":"149"},{"size":4055,"mtime":1616447005463,"results":"181","hashOfConfig":"149"},{"size":1250,"mtime":1615494334924,"results":"182","hashOfConfig":"149"},{"size":48,"mtime":1615234900568,"results":"183","hashOfConfig":"149"},{"size":1990,"mtime":1616619955794,"results":"184","hashOfConfig":"149"},{"size":1590,"mtime":1615234900120,"results":"185","hashOfConfig":"149"},{"size":1101,"mtime":1615235350943,"results":"186","hashOfConfig":"149"},{"size":134,"mtime":1615234900504,"results":"187","hashOfConfig":"149"},{"size":198,"mtime":1615234900040,"results":"188","hashOfConfig":"149"},{"size":154,"mtime":1615234900096,"results":"189","hashOfConfig":"149"},{"size":136,"mtime":1615234899952,"results":"190","hashOfConfig":"149"},{"size":1501,"mtime":1615234900576,"results":"191","hashOfConfig":"149"},{"size":152,"mtime":1615234899968,"results":"192","hashOfConfig":"149"},{"size":178,"mtime":1615234900624,"results":"193","hashOfConfig":"149"},{"size":170,"mtime":1615234900624,"results":"194","hashOfConfig":"149"},{"size":999,"mtime":1615234900616,"results":"195","hashOfConfig":"149"},{"size":172,"mtime":1615234900624,"results":"196","hashOfConfig":"149"},{"size":248,"mtime":1615234900616,"results":"197","hashOfConfig":"149"},{"size":2017,"mtime":1615234900632,"results":"198","hashOfConfig":"149"},{"size":517,"mtime":1615234900632,"results":"199","hashOfConfig":"149"},{"size":499,"mtime":1615234900616,"results":"200","hashOfConfig":"149"},{"size":53,"mtime":1615234900512,"results":"201","hashOfConfig":"149"},{"size":539,"mtime":1615234900512,"results":"202","hashOfConfig":"149"},{"size":206,"mtime":1615234899976,"results":"203","hashOfConfig":"149"},{"size":837,"mtime":1615234899976,"results":"204","hashOfConfig":"149"},{"size":72,"mtime":1615234899960,"results":"205","hashOfConfig":"149"},{"size":876,"mtime":1615234899960,"results":"206","hashOfConfig":"149"},{"size":646,"mtime":1616619955780,"results":"207","hashOfConfig":"149"},{"size":3473,"mtime":1616621176461,"results":"208","hashOfConfig":"149"},{"size":295,"mtime":1616447005432,"results":"209","hashOfConfig":"149"},{"size":2376,"mtime":1616447005432,"results":"210","hashOfConfig":"149"},{"size":247,"mtime":1615235350940,"results":"211","hashOfConfig":"149"},{"size":1569,"mtime":1615484558034,"results":"212","hashOfConfig":"149"},{"size":331,"mtime":1615235350941,"results":"213","hashOfConfig":"149"},{"size":6282,"mtime":1615234899976,"results":"214","hashOfConfig":"149"},{"size":2725,"mtime":1615480023396,"results":"215","hashOfConfig":"149"},{"size":515,"mtime":1615234900624,"results":"216","hashOfConfig":"149"},{"size":870,"mtime":1616447005448,"results":"217","hashOfConfig":"149"},{"size":9427,"mtime":1615235350902,"results":"218","hashOfConfig":"149"},{"size":5327,"mtime":1615235350904,"results":"219","hashOfConfig":"149"},{"size":14413,"mtime":1616447005432,"results":"220","hashOfConfig":"149"},{"size":2944,"mtime":1615234900048,"results":"221","hashOfConfig":"149"},{"size":2198,"mtime":1616447005432,"results":"222","hashOfConfig":"149"},{"size":12791,"mtime":1615480023396,"results":"223","hashOfConfig":"149"},{"size":7136,"mtime":1615235350906,"results":"224","hashOfConfig":"149"},{"size":3046,"mtime":1615495469013,"results":"225","hashOfConfig":"149"},{"size":3465,"mtime":1615235350916,"results":"226","hashOfConfig":"149"},{"size":9519,"mtime":1616621181848,"results":"227","hashOfConfig":"149"},{"size":861,"mtime":1615234900112,"results":"228","hashOfConfig":"149"},{"size":3924,"mtime":1616684563912,"results":"229","hashOfConfig":"149"},{"size":23093,"mtime":1615234900096,"results":"230","hashOfConfig":"149"},{"size":20361,"mtime":1616683147171,"results":"231","hashOfConfig":"149"},{"size":5461,"mtime":1615234900104,"results":"232","hashOfConfig":"149"},{"size":129,"mtime":1615234899960,"results":"233","hashOfConfig":"149"},{"size":736,"mtime":1615234899960,"results":"234","hashOfConfig":"149"},{"size":12043,"mtime":1615480023398,"results":"235","hashOfConfig":"149"},{"size":3357,"mtime":1615338844804,"results":"236","hashOfConfig":"149"},{"size":8964,"mtime":1616447005463,"results":"237","hashOfConfig":"149"},{"size":5362,"mtime":1615234900064,"results":"238","hashOfConfig":"149"},{"size":3061,"mtime":1615234900632,"results":"239","hashOfConfig":"149"},{"size":1155,"mtime":1615234900080,"results":"240","hashOfConfig":"149"},{"size":7346,"mtime":1615234900600,"results":"241","hashOfConfig":"149"},{"size":309,"mtime":1615234900080,"results":"242","hashOfConfig":"149"},{"size":69,"mtime":1615234899968,"results":"243","hashOfConfig":"149"},{"size":417,"mtime":1615234900600,"results":"244","hashOfConfig":"149"},{"size":990,"mtime":1616447005432,"results":"245","hashOfConfig":"149"},{"size":436,"mtime":1615234900576,"results":"246","hashOfConfig":"149"},{"size":476,"mtime":1616447005432,"results":"247","hashOfConfig":"149"},{"size":1584,"mtime":1616683147173,"results":"248","hashOfConfig":"149"},{"size":114,"mtime":1615234900512,"results":"249","hashOfConfig":"149"},{"size":554,"mtime":1615234900096,"results":"250","hashOfConfig":"149"},{"size":67,"mtime":1615234899952,"results":"251","hashOfConfig":"149"},{"size":114,"mtime":1615234900144,"results":"252","hashOfConfig":"149"},{"size":2230,"mtime":1615234900320,"results":"253","hashOfConfig":"149"},{"size":1438,"mtime":1615495150071,"results":"254","hashOfConfig":"149"},{"size":1645,"mtime":1615234900016,"results":"255","hashOfConfig":"149"},{"size":5943,"mtime":1615234900064,"results":"256","hashOfConfig":"149"},{"size":5555,"mtime":1615234900080,"results":"257","hashOfConfig":"149"},{"size":4705,"mtime":1615234900080,"results":"258","hashOfConfig":"149"},{"size":9248,"mtime":1615235350909,"results":"259","hashOfConfig":"149"},{"size":21922,"mtime":1616684266820,"results":"260","hashOfConfig":"149"},{"size":290,"mtime":1615234900064,"results":"261","hashOfConfig":"149"},{"size":13812,"mtime":1615234899968,"results":"262","hashOfConfig":"149"},{"size":164,"mtime":1615234900584,"results":"263","hashOfConfig":"149"},{"size":316,"mtime":1615234900584,"results":"264","hashOfConfig":"149"},{"size":464,"mtime":1615234900584,"results":"265","hashOfConfig":"149"},{"size":197,"mtime":1615234900576,"results":"266","hashOfConfig":"149"},{"size":440,"mtime":1615234900576,"results":"267","hashOfConfig":"149"},{"size":197,"mtime":1615234900576,"results":"268","hashOfConfig":"149"},{"size":200,"mtime":1615234900584,"results":"269","hashOfConfig":"149"},{"size":189,"mtime":1615234900576,"results":"270","hashOfConfig":"149"},{"size":3932,"mtime":1616447005401,"results":"271","hashOfConfig":"149"},{"size":4381,"mtime":1615234900144,"results":"272","hashOfConfig":"149"},{"size":1726,"mtime":1615234900136,"results":"273","hashOfConfig":"149"},{"size":1713,"mtime":1615234900600,"results":"274","hashOfConfig":"149"},{"size":2598,"mtime":1616447005416,"results":"275","hashOfConfig":"149"},{"size":5429,"mtime":1615910172294,"results":"276","hashOfConfig":"149"},{"size":8683,"mtime":1615234899992,"results":"277","hashOfConfig":"149"},{"size":10226,"mtime":1615234899992,"results":"278","hashOfConfig":"149"},{"size":10894,"mtime":1615234900000,"results":"279","hashOfConfig":"149"},{"size":9879,"mtime":1616630295381,"results":"280","hashOfConfig":"149"},{"size":4782,"mtime":1615234900008,"results":"281","hashOfConfig":"149"},{"size":2361,"mtime":1616447005416,"results":"282","hashOfConfig":"149"},{"size":2685,"mtime":1616447005416,"results":"283","hashOfConfig":"149"},{"size":18935,"mtime":1615234900016,"results":"284","hashOfConfig":"149"},{"size":343,"mtime":1615234900128,"results":"285","hashOfConfig":"149"},{"size":18224,"mtime":1615910850894,"results":"286","hashOfConfig":"149"},{"size":1015,"mtime":1615910504110,"results":"287","hashOfConfig":"149"},{"size":9174,"mtime":1615911854485,"results":"288","hashOfConfig":"149"},{"size":70,"mtime":1615234900128,"results":"289","hashOfConfig":"149"},{"size":347,"mtime":1615234900120,"results":"290","hashOfConfig":"149"},{"size":143,"mtime":1615234900120,"results":"291","hashOfConfig":"149"},{"size":194,"mtime":1615234900128,"results":"292","hashOfConfig":"149"},{"size":773,"mtime":1615414672398,"results":"293","hashOfConfig":"149"},{"size":3190,"mtime":1616447005448,"results":"294","hashOfConfig":"149"},{"size":8424,"mtime":1615852186641,"results":"295","hashOfConfig":"149"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},"5mnnlj",{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"298"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"298"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"298"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"298"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"298"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"298"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"298"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"298"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"298"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"298"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"298"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"298"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"298"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"298"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"298"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"298"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"298"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"298"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"298"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"298"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"298"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"298"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"298"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"298"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"298"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"298"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"298"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"298"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"298"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"298"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"298"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"298"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"298"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"298"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"298"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"298"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"298"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"298"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"298"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"298"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"298"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"298"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"298"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"298"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"298"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"298"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"298"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"298"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"298"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"610","messages":"611","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"298"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"298"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"298"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"298"},"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\index.js",[],["644","645"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\App.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\reportWebVitals.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\store.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\index.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\auth\\auth.reducer.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\dashboard\\dashboard.reducer.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\utils\\utils.reducer.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\reducers\\applicant\\applicant.reducer.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\ScrollTopRouter.jsx",["646"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollTopRouter({ history }) {\r\n  useEffect(() => {\r\n    const routeChanged = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n        routeChanged();\r\n    };\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollTopRouter);","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\index.js",["647"],"import moduleRouter from './routes';\r\n\r\nexport default {\r\n    moduleRouter\r\n};\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\utils\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\dashboard\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\auth\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\types\\applicant\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\routes\\index.js",["648"],"import RouterOperativa from './RouterOperativa';\r\nimport NavigationItems from './../global/constants/navigation';\r\n\r\nexport default {\r\n  pathBase: '/',\r\n  componentRouter: RouterOperativa,\r\n  navigationItems: NavigationItems\r\n};\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Button\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Breadcrumbs\\index.js",["649"],"import React,{useEffect} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport \"./index.css\";\r\nconst initRoutes = [{name: \"\", to: \"\"}]\r\n\r\nexport default function CustomBreadcrumbs({ routes = initRoutes }) {\r\n\r\n \r\n    const history = useHistory();\r\n    return (\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n            {\r\n                routes?.map((route, index) => (\r\n                    index === (routes.length - 1) ? <Typography variant=\"button\" className=\"title-color\">{route.name}</Typography> :\r\n                    <Link key={index} color=\"inherit\" href=\"#\" onClick={() => history.push(route.to)}>\r\n                        <Typography variant=\"button\" className=\"light-gray-color\">\r\n                            {route.name}\r\n                        </Typography>\r\n                    </Link>\r\n                ))\r\n            }\r\n        </Breadcrumbs>\r\n    );\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Checkbox\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\LinearProgress\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Link\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Modal\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Radio\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Navigation\\index.js",["650","651","652","653","654"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\TextInput\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Chip\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Typography\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Select\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\DataGrid\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\session\\AppSession.js",["655"],"let sessionProvider = sessionStorage, sessionItemName = 'SESSION_STORE';\r\n\r\nconst create = (sessionData) => { sessionProvider.setItem(sessionItemName, JSON.stringify(sessionData)) };\r\nconst get = () => (JSON.parse(sessionProvider.getItem(sessionItemName)));\r\nconst add = (nodeName, nodeData) => {\r\n    const currentSession = (JSON.parse(sessionProvider.getItem(sessionItemName))) || {};\r\n    sessionProvider.setItem(sessionItemName, JSON.stringify({\r\n        ...currentSession,\r\n        [nodeName]: nodeData\r\n    }))\r\n};\r\nconst destroy = (exitNavigation = true) => {\r\n    sessionProvider.removeItem(sessionItemName);\r\n    if (exitNavigation) {\r\n        window.location.href = process.env.REACT_APP_PATH_LANDING;\r\n    }\r\n}\r\n\r\nexport default { create, get, add, destroy };\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\auth\\auth.action.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\routes\\RouterOperativa.jsx",["656","657","658","659"],"import React, { useEffect, useState } from 'react';\r\n\r\n//react router\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n//Routes\r\nimport { AuthRoutes, AuthRouter } from '../auth';\r\nimport { HomeRoutes, HomeRouter } from '../home';\r\nimport { DashboardRoutes, DashboardRouter } from '../dashboard';\r\nimport { AdminRoutes, AdminRouter } from '../admin';\r\nimport { SessionRoutes } from '../shared/libs/sessionRoutes';\r\nimport {ApplicantRouter,ApplicantRoutes} from '../applicant'\r\n\r\nconst RouterOperativa = () => {\r\n    // Get session and user\r\n    const initRoute = SessionRoutes().initRoute;\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/* <Route exact path={HomeRoutes} component={HomeRouter} /> */}\r\n                <Route exact path={AuthRoutes} component={AuthRouter} />\r\n                <Route exact path={DashboardRoutes} component={DashboardRouter} />\r\n                <Route exact path={AdminRoutes} component={AdminRouter} />\r\n                <Route exact path={ApplicantRoutes} component={ApplicantRouter} />\r\n                <Redirect to={initRoute} /> {/*window.location.href = process.env.REACT_APP_PATH_LANDING */}\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default RouterOperativa;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\images\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\menuRoutes\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\navigation\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\sessionRoutes\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\companySignUp.service.js",["660"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\nexport default async (body) => {\r\n    const response = await api.post('/register/business', body);\r\n    return response;\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\municipalitySignUp.service.js",["661"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\nexport default async (body) => {\r\n  const response = await api.post('/register/muni', body);\r\n  return response;\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\applicantProfile.service.js",["662"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\n// Registrar la información Personal del Usuario\r\nconst applicantPersonalDataRegister = async (body) => {\r\n    const response = await api.post('/user/', body)\r\n    return response;\r\n}\r\n\r\n// Registrar la información Educativa del Usuario.\r\nconst applicantEducationRegister = async (body) => {\r\n    const response = await api.post('/education/', body);\r\n    return response;\r\n}\r\n\r\n// Registrar la información de Trabajo del Usuario\r\nconst applicantWithExperienceRegister = async (body) => {\r\n    const response = await api.post('/job/', body)\r\n    return response;\r\n}\r\n\r\n// Registrar la información de Trabajo del Usuario\r\nconst applicantWithoutExperienceRegister = async (body) => {\r\n    const response = await api.post('/job_without', body)\r\n    return response;\r\n}\r\n\r\nexport default { \r\n    applicantPersonalDataRegister, \r\n    applicantEducationRegister, \r\n    applicantWithExperienceRegister, \r\n    applicantWithoutExperienceRegister \r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\applicantSignUp.service.js",["663"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\nexport default async (body) => {\r\n  const response = await api.post('/auth/register', body);\r\n  return response;\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\applicant\\applicantPublication.service.js",["664"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\n\r\n\r\nconst getApplicantPublication = async () => {\r\n    const response = await api.get('/publications/account');\r\n    return response;\r\n}\r\n\r\n\r\nexport default { \r\n    getApplicantPublication, \r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\dashboard\\dashboard.service.js",["665"],"\r\nimport api from \"../../../modules/shared/libs/api\";\r\n\r\nconst getJobs = async () => {\r\n    const response = await api.get('/dashboard/jobs');\r\n    return response;\r\n}\r\n\r\nconst getPublications = async () => {\r\n    const response = await api.get('/publications');\r\n    return response;\r\n}\r\n\r\nconst updatePublication = async (params) => {\r\n    const response = await api.post(`/publication/${params.publication_id}`, params.body);\r\n    return response;\r\n}\r\n\r\nconst savePublication = async (body) => {\r\n    const response = await api.post(`/publication`, body);\r\n    return response;\r\n}\r\n\r\nconst archivePublication = async (params) => {\r\n    const response = await api.post(`/publication/${params.id}/archive`);\r\n    return response;\r\n}\r\n\r\nconst deletePublication = async (params) => {\r\n    const response = await api.post(`/publication/${params.id}/delete`);\r\n    return response;\r\n}\r\n\r\nconst getPostulantsByPublicationId = async (params) => {\r\n    const response = await api.get(`/publication/${params.publication_id}/postulantes`);\r\n    return response;\r\n}\r\n\r\nconst getApplicantProfile = async (params) => {\r\n    const response = await api.get(`/account/user/profile/${params.postulant_id}`);\r\n    return response;\r\n}\r\n\r\nconst selectApplicant =async (body,publication_id) =>{\r\n    const response = await api.post(`/publication/${publication_id}/selectApplicant`,body);\r\n    return response;\r\n}\r\n\r\nconst denyApplicant = async (body,publication_id) =>{\r\n    const response = await api.post(`/publication/${publication_id}/denyApplicant`,body);\r\n    return response;\r\n}\r\n\r\nconst hireApplicant = async (body,publication_id) =>{\r\n    const response = await api.post(`/publication/${publication_id}/hireApplicant`,body);\r\n    return response;\r\n}\r\n\r\n\r\nexport default {\r\n    getJobs,\r\n    getPublications,\r\n    updatePublication,\r\n    savePublication,\r\n    archivePublication,\r\n    deletePublication,\r\n    getPostulantsByPublicationId,\r\n    getApplicantProfile,\r\n    selectApplicant,\r\n    denyApplicant,\r\n    hireApplicant\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\business\\subuser.service.js",["666"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\nconst getSubUsers = async () => {\r\n    const response = await api.get('/account/users');\r\n    return response;\r\n}\r\n\r\nconst createSubUser = async (body) => {\r\n    const response = await api.post('/account/user', body);\r\n    return response;\r\n}\r\n\r\nconst deleteSubUser = async (body) => {\r\n    const response = await api.post('/account/users/delete', body);\r\n    return response;\r\n}\r\n\r\n\r\nexport default {\r\n    getSubUsers,\r\n    createSubUser,\r\n    deleteSubUser,\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\admin\\user.service.js",["667"],"import api from \"../../../modules/shared/libs/api\";\r\n\r\nconst getAccounts = async () => {\r\n    const response = await api.get('/accounts');\r\n    return response;\r\n}\r\n\r\nconst acceptAccount = async (body) => {\r\n    const response = await api.post('/account/accept', body);\r\n    return response;\r\n}\r\n\r\nconst denyAccount = async (body) => {\r\n    const response = await api.post('/account/deny', body);\r\n    return response;\r\n}\r\n\r\nexport default {\r\n    getAccounts,\r\n    acceptAccount,\r\n    denyAccount\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\routes\\HomeRoutes.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\routes\\HomeRouter.jsx",["668"],"import React from 'react';\r\n\r\n//router\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HomeRoutes from './HomeRoutes';\r\n\r\n//Pages\r\nimport Home from '../pages/Home';\r\nimport PrivateRoute from '../../../routers/PrivateRoute';\r\n\r\nconst MyAccountRouter = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <PrivateRoute\r\n                    exact\r\n                    path={HomeRoutes[0]}\r\n                    component={Home} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\nexport default MyAccountRouter;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\routes\\ApplicantRoutes.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\routes\\ApplicantRouter.jsx",["669"],"import React from 'react';\r\n\r\n//router\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ApplicantRoutes from './ApplicantRoutes'\r\nimport PrivateRoute from '../../../routers/PrivateRoute';\r\n\r\nimport Applicant from '../pages/Applicant'\r\nimport ShowPublication from '../pages/ShowPublication'\r\n\r\nconst MyAccountRouter = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <PrivateRoute\r\n                    needSession\r\n                    exact\r\n                    path={ApplicantRoutes[1]}\r\n                    component={Applicant} />\r\n                <PrivateRoute\r\n                    needSession\r\n                    exact\r\n                    path={ApplicantRoutes[3]}\r\n                    component={ShowPublication} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\nexport default MyAccountRouter;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\routes\\AdminRoutes.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\routes\\AdminRouter.jsx",["670","671"],"import React from 'react';\r\n\r\n//router\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AuthRoutes from './AdminRoutes';\r\n\r\n//Pages\r\nimport Requests from '../pages/Requests';\r\nimport Home from '../pages/Home';\r\nimport PrivateRoute from '../../../routers/PrivateRoute';\r\n\r\nconst MyAccountRouter = () => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                {/* <PrivateRoute\r\n                    exact\r\n                    needSession\r\n                    needAccountType\r\n                    path={AuthRoutes[0]}\r\n                    component={Home} /> */}\r\n                <PrivateRoute\r\n                    exact\r\n                    needSession\r\n                    needAccountType\r\n                    path={AuthRoutes[0]}\r\n                    component={Requests} />\r\n            </Switch>\r\n        </>\r\n    );\r\n};\r\nexport default MyAccountRouter;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\routes\\DashboardRoutes.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\routes\\DashboardRouter.jsx",["672","673"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\routes\\AuthRoutes.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\routes\\AuthRouter.jsx",["674"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\index.js",["675"],"import { changePassword, logIn, recoverPassword } from \"./auth.service\"\r\nimport { updateAccount, getAccount } from \"./user.service\"\r\n\r\nexport default {\r\n    changePassword,\r\n    logIn,\r\n    recoverPassword,\r\n    updateAccount,\r\n    getAccount\r\n\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\routers\\PrivateRoute.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\user.service.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\pages\\ShowPublication.jsx",["676","677","678","679","680","681"],"import React, { useEffect, useState } from 'react'\r\nimport { DateTime } from \"luxon\";\r\nimport { Container, Grid, MenuItem ,Divider} from \"@material-ui/core\";\r\nimport {Breadcrumbs} from \"../../shared/components\"\r\nimport * as moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SessionRoutes } from '../../shared/libs/sessionRoutes';\r\nimport { Typography } from \"../../shared/components\";\r\nimport { getItems,getDistricts,getAllPeriods} from \"../../../store/actions/utils/utils.action\";\r\nimport { getPeriods } from '../../../store/services/utils.service.temp';\r\n\r\n// const CreateData=(job_title)=>{\r\n\r\n\r\n\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nconst ShowPublication  = ({ history }) => {\r\n    const dateLocal = DateTime.local().toFormat(\"yyyy-LL-dd\") //Don't use momentjs, will soon be deprecated\r\n    const dispatch = useDispatch();\r\n    const { publicationSelected } = useSelector(state => state?.applicant)\r\n    const { districts,items,periods } = useSelector(state => state?.utils)\r\n    const initRoute = SessionRoutes().initRoute;\r\n    const routes = [{ name: \"MIS POSTULACIONES\", to: `/postualnte/postulaciones` }, { name: \"EN PROGRESO\", to: `/postualnte/postulaciones/editar-posicion` }];\r\n    const goForward = () => history.push(initRoute);\r\n    const [publication, setPublication] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n        dispatch(getDistricts())\r\n        dispatch(getAllPeriods())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        let row ={...publicationSelected}\r\n        row.to_date=moment(row.to_date).format('DD/MM/YYYY');\r\n        row.categoria=items?.find(x=>x.id===row.rubro_id)?.name;\r\n        row.district=districts?.find(x=>x.id===row.district_id)?.name;\r\n        row.from_date=moment(row.from_date).format('DD/MM/YYYY');\r\n        row.period=periods?.find(x=>x.id===row.period_id)?.name;\r\n        setPublication(row);\r\n        \r\n    }, [])\r\n\r\n\r\n    return( <Container className=\"dashboard-container\">\r\n               <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                            <Breadcrumbs routes={routes} />\r\n                        </Grid>\r\n                </Grid>\r\n              \r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={9}>\r\n                        <Typography variant=\"h6\" component=\"h6\">\r\n                            <strong>{publication.job_title}</strong>\r\n                        </Typography>\r\n                        <Divider />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Fecha de caducidad</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.to_date}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Categoría</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.categoria}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Descripción</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.description}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Requerimientos</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.requirements}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Dirección</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.address}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Distrito</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.district}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Salario</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.salary}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Fecha de inicio</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.from_date}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Periodo de permanencia</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {publication.period}\r\n                        </Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default ShowPublication;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\pages\\Applicant.jsx",["682","683","684","685"],"import React, { useEffect, useState } from \"react\";\r\nimport '../styles/index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { Breadcrumbs, Button, Typography } from \"../../shared/components\";\r\nimport { SessionRoutes } from \"../../shared/libs/sessionRoutes\";\r\nimport { CustomCard } from \"../../dashboard/components\";\r\nimport {ApplicantDataTable} from '../components'\r\n\r\nconst Applicant  = ({ history }) => {\r\n    const { user } = useSelector(state => state?.auth);\r\n    console.log(\"user:  \", user)\r\n    const dispatch = useDispatch();\r\n    const initRoute = SessionRoutes().initRoute;\r\n    const routes = [{ name: \"Mis postulaciones\", to: `${initRoute}` }];\r\n\r\n    useEffect(() => {\r\n        \r\n      }, [])\r\n\r\n    const goToPublishApplicant = () => history.push(`${initRoute}/ver-publicacion`);\r\n\r\n    return (\r\n        <Container className=\"applicant-container\">\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs routes={routes} />\r\n                </Grid>\r\n                <Grid item xs={12} style={{ margin: \"1rem\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <CustomCard className=\"dashboard-municipality-card\" borderRadius=\"10px\">\r\n                                <Typography variant=\"h5\" component=\"h5\" className=\"title-color\">\r\n                                {user?.account?.user?.fullname}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" className=\"title-color\">\r\n                                {/* cambiar ruc a dinamico */}\r\n                                DNI: {user?.account?.user?.document_number}\r\n                                </Typography>\r\n                            </CustomCard>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" component=\"h6\" className=\"title-color\">\r\n                                        Te encuentras en proceso de selección con  las siguientes empresas\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                   <ApplicantDataTable />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n         \r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Applicant;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\auth\\auth.service.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\api\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\NewPassword.jsx",["686","687","688","689","690"],"import React, { useState } from 'react'\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '../../shared/components';\r\nimport { useForm } from \"../../hooks\";\r\nimport {service_Auth} from \"../../../store/services\";\r\nimport RequestNewPasswordSent from \"../components/RequestNewPasswordSent\";\r\n\r\nconst initialValues = {\r\n    password: \"\",\r\n    password_confirmed: \"\"\r\n}\r\n\r\nexport default function Index(props) {\r\n    const history = useHistory();\r\n    const search = useLocation().search;\r\n    const token = new URLSearchParams(search).get('token');\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showRepeatPassword, setShowRepeatPassword] = useState(false);\r\n    const [error, setError] = useState(null)\r\n    const [hasRequestSent, setHasRequestSent] = useState(false)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? (fieldValues.password.length < 6 ? \"Ingrese 6 caracteres entre letras y números\" : \"\") : \"El campo es requerido.\"\r\n        if ('repeatPassword' in fieldValues)\r\n            temp.repeatPassword = fieldValues.repeatPassword ? (fieldValues.repeatPassword != values.password ? \"Ambas contraseñas deben ser iguales\" : \"\") : \"El campo es requerido.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleRestorePassword = async () => {\r\n        const body = {\r\n            ...values, token\r\n        }\r\n        setError(null)\r\n        try {\r\n            let response = await service_Auth.changePassword(body)\r\n            if (response.data) {\r\n                setHasRequestSent(true);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status === 401) {\r\n                setError(`${error.response.data.message}, el token a expirado.` )\r\n            } else {\r\n                console.log(\"error\", error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                hasRequestSent ? < RequestNewPasswordSent /> :\r\n                    <>\r\n                    {error && <Alert action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setError(null);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        } severity=\"error\">{error}</Alert>}\r\n                        <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ padding: 20, height: \"80vh\" }}>\r\n                            <Grid item xs={12} md={6} lg={4}>\r\n                                <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <Typography align=\"center\" variant=\"h4\" component=\"h4\">\r\n                                            Restablecer contraseña\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <FormControl className=\"sign-in__input-container\" variant=\"outlined\" fullWidth error={errors.password}>\r\n                                            <InputLabel htmlFor=\"outlined-password\" >Contraseña Nueva</InputLabel>\r\n                                            <OutlinedInput\r\n                                                name=\"password\"\r\n                                                id=\"outlined-password\"\r\n                                                type={showPassword ? 'text' : 'password'}\r\n                                                value={values.password}\r\n                                                onChange={handleInputChange}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            id=\"outlined-password-icon\"\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={() => setShowPassword(!showPassword)}\r\n                                                            // onMouseDown={handleMouseDownPassword}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                                labelWidth={127}\r\n                                            />\r\n                                            <FormHelperText>{errors.password || \"Ingrese 6 caracteres entre letras y números\"}</FormHelperText>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <FormControl className=\"sign-in__input-container\" variant=\"outlined\" fullWidth error={errors.password_confirmed}>\r\n                                            <InputLabel htmlFor=\"outlined-password\" >Confirmar contraseña nueva</InputLabel>\r\n                                            <OutlinedInput\r\n                                                name=\"password_confirmed\"\r\n                                                id=\"outlined-password\"\r\n                                                type={showRepeatPassword ? 'text' : 'password'}\r\n                                                value={values.password_confirmed}\r\n                                                onChange={handleInputChange}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            id=\"outlined-password-icon\"\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={() => setShowRepeatPassword(!showRepeatPassword)}\r\n                                                            // onMouseDown={handleMouseDownPassword}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            {showRepeatPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                                labelWidth={127}\r\n                                            />\r\n                                            <FormHelperText>{errors.password_confirmed}</FormHelperText>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className=\"justify-center\">\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={6}>\r\n                                                <Button fullWidth variant=\"outlined\" size=\"large\" onClick={() => window.location.href = process.env.REACT_APP_PATH_LANDING}>Cancelar</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <Button fullWidth variant=\"contained\" size=\"large\" onClick={handleRestorePassword} disabled={disabledButtonState}>Siguiente</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\RecoverPassword.jsx",["691","692","693"],"import React, { useState } from 'react';\r\nimport { IconButton, Grid, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, TextInput } from '../../shared/components';\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { isEmail } from \"../../shared/libs/validators\";\r\nimport RequestRecoverSent from \"../components/RequestRecoverSent\";\r\nimport {service_Auth} from \"../../../store/services\";\r\n\r\nconst initialValues = {\r\n    email: \"\"\r\n}\r\n\r\nconst SignIn = ({ history }) => {\r\n\r\n    const [hasRequesSent, setHasRequesSent] = useState(false)\r\n    const [error, setError] = useState(null);\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? (isEmail(fieldValues.email) ? \"\" : \"Correo electronico no válido\") : \"El campo es requerido.\"\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? \"\" : \"El campo es requerido.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleClick = async () => {\r\n        setError(null)\r\n        try {\r\n            let response = await service_Auth.recoverPassword(values)\r\n            if (response.data) {\r\n                setHasRequesSent(true);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status === 401) {\r\n                setError(error.response.data.message)\r\n            } else {\r\n                console.log(\"error\", error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                hasRequesSent ? <RequestRecoverSent /> :\r\n                    <>\r\n                        {error && <Alert action={\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                    setError(null);\r\n                                }}\r\n                            >\r\n                                <CloseIcon fontSize=\"inherit\" />\r\n                            </IconButton>\r\n                        } severity=\"error\">{error}</Alert>}\r\n                        <Grid container spacing={0} style={{ padding: 20, marginTop:\"5%\" }}>\r\n                            <Grid item xs={12} md={6} lg={4} justify=\"center\" style={{ margin: \"auto\" }}>\r\n                                <Grid container spacing={3}>\r\n\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <Typography align=\"center\" variant=\"h4\" component=\"h4\">\r\n                                            Recupera tu contraseña\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <Typography variant=\"body1\" component=\"p\">\r\n                                            Ingrese tu correo electrónico para recibir instrucciones de cómo restrablecer tu contraseña.\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} justify=\"center\">\r\n                                        <TextInput\r\n                                            fullWidth\r\n                                            name=\"email\"\r\n                                            label=\"Correo electrónico\"\r\n                                            value={values.email}\r\n                                            onChange={handleInputChange}\r\n                                            error={errors.email}\r\n                                            helperText={errors.email}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className=\"justify-center\">\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={6}>\r\n                                                <Button fullWidth variant=\"outlined\" size=\"large\" onClick={() => history.goBack()}>CANCELAR</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </Grid>\r\n                                            <Grid item xs={6}>\r\n                                                <Button fullWidth variant=\"contained\" size=\"large\" onClick={handleClick} disabled={disabledButtonState}>ACEPTAR</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantProfile.jsx",["694","695","696","697"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\CompanySignUp.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantHome.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\ApplicantSignUp.jsx",["698"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport \"../styles/ApplicantSignUp.css\";\r\n\r\nimport { FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Button, Checkbox, Link, TextInput } from '../../shared/components';\r\nimport { TermsAndConditionModal } from '../components';\r\n\r\nimport { isEmail } from '../../shared/libs/validators';\r\nimport { setUserError, applicantSignUp } from '../../../store/actions/auth/auth.action';\r\n\r\nconst initialValue = {\r\n    value: '',\r\n    error: false,\r\n    helperText: '',\r\n    show: false,\r\n    checked: false\r\n}\r\n\r\nconst SignUp = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const { error, signUpSucces } = useSelector((state) => state?.auth);\r\n    const [hasError, setHasError] = useState('');\r\n\r\n    const [email, setEmail] = useState(initialValue);\r\n    const [password, setPassword] = useState(initialValue);\r\n    const [repeatPassword, setRepeatPassword] = useState(initialValue);\r\n    const [termsAndCondition, setTermsAndCondition] = useState(initialValue);\r\n\r\n    const [showTermsAndConditionModal, setShowTermsAndConditionModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setHasError(error)\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        console.log(\"signUpSucces\",signUpSucces)\r\n        if(signUpSucces){\r\n            history.push('/postulante/inicio')\r\n        }\r\n\r\n    },[signUpSucces])\r\n\r\n    const handleClickShowPassword = (prop) => () => {\r\n        if (prop === 'password') setPassword({ ...password, show: !password.show })\r\n        if (prop === 'repeatPassword') setRepeatPassword({ ...repeatPassword, show: !repeatPassword.show })\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const goSignUpPage = () => {\r\n        history.push('/iniciar-sesion')\r\n    }\r\n\r\n    const openTermsAndConditionModal = (event) => {\r\n        event.preventDefault();\r\n        setShowTermsAndConditionModal(true);\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        validateEmail();\r\n        validatePassword();\r\n        validateRepeatPassword();\r\n        validateTermsAndCondition();\r\n\r\n        if (!email.error && !password.error && !repeatPassword.error && !validateTermsAndCondition.error) {\r\n            const body = {\r\n                email: email.value,\r\n                password: password.value,\r\n                term_condi: termsAndCondition.checked === true ? 1 : 0\r\n            }\r\n            dispatch(applicantSignUp(body));\r\n        }\r\n    }\r\n\r\n    const validateEmail = (value) => {\r\n        let error = false, helperText = '';\r\n        const _email = value !== undefined ? value : email.value;\r\n        if (!_email) {\r\n            error = true;\r\n            helperText = 'Este campo es requerido';\r\n        } else if (!isEmail(_email)) {\r\n            error = true;\r\n            helperText = 'Coloque un email válido';\r\n        }\r\n\r\n        setEmail({ ...email, value: _email, error, helperText });\r\n    }\r\n\r\n    const validatePassword = (value) => {\r\n        let error = false, helperText = '';\r\n        const _password = value !== undefined ? value : password.value;\r\n        if (!_password) {\r\n            error = true;\r\n            helperText = 'Este campo es requerido';\r\n        } else if (_password.length < 6) {\r\n            error = true;\r\n            helperText = 'Ingrese 6 caracteres entre letras y números';\r\n        }\r\n\r\n        setPassword({ ...password, value: _password, error, helperText });\r\n    }\r\n\r\n    const validateRepeatPassword = (value) => {\r\n        let error = false, helperText = '';\r\n        const _repeatPassword = value !== undefined ? value : repeatPassword.value;\r\n        if (!_repeatPassword) {\r\n            error = true;\r\n            helperText = 'Este campo es requerido';\r\n        } else if (_repeatPassword !== password.value) {\r\n            error = true;\r\n            helperText = 'Ambas contraseñas deben ser iguales';\r\n        }\r\n\r\n        setRepeatPassword({ ...repeatPassword, value: _repeatPassword, error, helperText });\r\n    }\r\n\r\n    const validateTermsAndCondition = (value) => {\r\n        let error = false, helperText = '';\r\n        const _termsAndCondition = value !== undefined ? value : termsAndCondition.checked;\r\n        if (!_termsAndCondition) {\r\n            error = true;\r\n            helperText = 'Debe aceptar los términos y condiciones';\r\n        }\r\n\r\n        setTermsAndCondition({ ...termsAndCondition, checked: _termsAndCondition, error, helperText });\r\n    }\r\n\r\n    const handleAcceptTermsAndCondition = () => {\r\n        validateTermsAndCondition(true);\r\n        setShowTermsAndConditionModal(false);\r\n    }\r\n\r\n    const goBack = () => history.goBack()\r\n\r\n    return (\r\n        <>\r\n            {hasError && <Alert action={\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        dispatch(setUserError(null));\r\n                    }}\r\n                >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            } severity=\"error\">{hasError}</Alert>}\r\n            <Grid container spacing={0}  style={{ padding: 20 }}>\r\n                <Grid item xs={12} md={6} lg={4} justify=\"center\" style={{ margin: \"auto\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography align=\"center\" variant=\"h5\" component=\"h5\" className=\"title-color\">\r\n                                Regístrate\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography align=\"center\" variant=\"body1\" component=\"p\">\r\n                                Si ya tienes una cuenta&nbsp;\r\n                            <Link href=\"#\" onClick={goSignUpPage} underline=\"always\">inicia sesión</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <TextInput\r\n                                fullWidth\r\n                                label=\"Correo electrónico\"\r\n                                value={email.value}\r\n                                onChange={(event) => validateEmail(event.target.value)}\r\n                                error={email.error}\r\n                                helperText={email.error && email.helperText}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <FormControl className=\"applicant-sign-up__input-container\" variant=\"outlined\" fullWidth error={password.error}>\r\n                                <InputLabel htmlFor=\"outlined-password\" >Crear contraseña</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-password\"\r\n                                    type={password.show ? 'text' : 'password'}\r\n                                    value={password.value}\r\n                                    onChange={(event) => validatePassword(event.target.value)}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                id=\"outlined-password-icon\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword('password')}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {password.show ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    labelWidth={127}\r\n                                />\r\n                                <FormHelperText>{(password.error && password.helperText) || \"Ingrese 6 caracteres entre letras y números\"}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <FormControl className=\"applicant-sign-up__input-container\" variant=\"outlined\" fullWidth error={repeatPassword.error}>\r\n                                <InputLabel htmlFor=\"outlined-repeat-password\" >Confirmar contraseña</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-repeat-password\"\r\n                                    type={repeatPassword.show ? 'text' : 'password'}\r\n                                    value={repeatPassword.value}\r\n                                    onChange={(event) => validateRepeatPassword(event.target.value)}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                id=\"outlined-repeat-password-icon\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword('repeatPassword')}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {repeatPassword.show ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    labelWidth={157}\r\n                                />\r\n                                {repeatPassword.error && <FormHelperText>{repeatPassword.helperText}</FormHelperText>}\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl className=\"applicant-sign-up__checkbox-container align-items-center\" variant=\"outlined\" fullWidth error={termsAndCondition.error}>\r\n                                <Checkbox\r\n                                    label={\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            Acepto los&nbsp;\r\n                                        <Link onClick={openTermsAndConditionModal} underline=\"always\">términos y condiciones</Link>\r\n                                        </Typography>\r\n                                    }\r\n                                    checked={termsAndCondition.checked}\r\n                                    onChange={(event) => validateTermsAndCondition(event.target.checked)}\r\n                                />\r\n                                {termsAndCondition.error && <FormHelperText>{termsAndCondition.helperText}</FormHelperText>}\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"justify-center\">\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <Button fullWidth variant=\"outlined\" size=\"large\" onClick={goBack}>Cancelar</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Button fullWidth variant=\"contained\" size=\"large\" onClick={handleRegister} disabled={!email.value || !password.value || !repeatPassword.value || !termsAndCondition.checked}>Siguiente</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <TermsAndConditionModal open={showTermsAndConditionModal} handleClose={() => setShowTermsAndConditionModal(false)} handleAccept={handleAcceptTermsAndCondition} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\SignIn.jsx",["699","700","701","702","703"],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Typography } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, Checkbox, Link, TextInput } from '../../shared/components';\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { isEmail } from \"../../shared/libs/validators\";\r\nimport { setUserError, setUser, logIn } from '../../../store/actions/auth/auth.action';\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n}\r\n\r\nconst SignIn = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { error, user } = useSelector((state) => state.auth);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const goSignUpPage = () => {\r\n        history.push('/tipo-de-cuenta')\r\n    }\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? (isEmail(fieldValues.email) ? \"\" : \"Correo electronico no válido\") : \"El campo es requerido.\"\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? \"\" : \"El campo es requerido.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleLogin = async() => {\r\n        dispatch(logIn(values));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error && <Alert action={\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        dispatch(setUserError(null));\r\n                    }}\r\n                >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n            } severity=\"error\">{error}</Alert>}\r\n            <Grid container spacing={0} style={{ padding: 20 }}>\r\n                <Grid item xs={12} md={6} lg={4} justify=\"center\" style={{ margin: \"auto\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography align=\"center\" variant=\"h4\" component=\"h4\">\r\n                                Inicia sesión\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography align=\"center\" variant=\"body1\" component=\"p\">\r\n                                Si aún no tienes cuenta en Operativa&nbsp;\r\n                            <Link href=\"#\" onClick={goSignUpPage} underline=\"always\">regístrate aquí</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <TextInput\r\n                                fullWidth\r\n                                name=\"email\"\r\n                                label=\"Correo electrónico\"\r\n                                value={values.email}\r\n                                onChange={handleInputChange}\r\n                                error={errors.email? true:false}\r\n                                helperText={errors.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <FormControl className=\"sign-in__input-container\" variant=\"outlined\" fullWidth error={errors.password? true:false}>\r\n                                <InputLabel htmlFor=\"outlined-password\" >Crear contraseña</InputLabel>\r\n                                <OutlinedInput\r\n                                    name=\"password\"\r\n                                    id=\"outlined-password\"\r\n                                    type={showPassword ? 'text' : 'password'}\r\n                                    value={values.password}\r\n                                    onChange={handleInputChange}\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton\r\n                                                id=\"outlined-password-icon\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                // onMouseDown={handleMouseDownPassword}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    labelWidth={127}\r\n                                />\r\n                                <FormHelperText>{errors.password}</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl className=\"\" variant=\"outlined\" fullWidth >\r\n                                <Checkbox\r\n                                    label={\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            Mantener mi sesión iniciada.\r\n                                        </Typography>\r\n                                    }\r\n                                    name=\"keepMySession\"\r\n                                // checked={values.keepMySession}\r\n                                // onChange={handleInputChange}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Button fullWidth variant=\"contained\" size=\"large\" onClick={handleLogin} disabled={disabledButtonState}>INGRESA</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography align=\"center\" variant=\"body1\" component=\"p\">\r\n                                <Link href=\"#\" onClick={() => history.push(\"/recuperar-contraseña\")} underline=\"always\">¿Olvidaste tu contraseña?</Link>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn;","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\pages\\AccountType.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Profile.jsx",["704","705"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nimport { EditProfileForm, ShowProfile } from \"../components\";\r\nimport { Breadcrumbs } from \"../../shared/components\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { actions_Utils } from \"../../../store/actions\";\r\n\r\nconst routes = [{ name: \"Perfil\", to: \"/dashboard\" }];\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {user} = useSelector(state => state?.auth)\r\n    const [isEditActive, setIsEditActive] = useState(false);\r\n    const [userData, setUserData] = useState({})\r\n    const [openAlert, setOpenAlert] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(actions_Utils.getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const { account } = user;\r\n            let dateTemp = {\r\n                razon_social: account.razon_social,\r\n                document_number: account.user.document_number,\r\n                rubro: account.role== \"business\"? account.user.interest_rubro_id: null,\r\n                first_name: account.user.first_name,\r\n                last_name: account.user.last_name,\r\n                email: account.email,\r\n                phone: account.user.phone,\r\n                position: account.user.cargo_input,\r\n                area: account.user.area_input\r\n            }\r\n            setUserData(dateTemp)\r\n    },[user])\r\n\r\n    const AlertMessage = () => (\r\n        <div className=\"alert-container\">\r\n            <Alert icon={false} severity=\"success\" color=\"info\" onClose={() => setOpenAlert(false)}>\r\n                Los cambios se guardaron con éxito\r\n          </Alert>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Container className=\"dashboard-container\">\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12}>\r\n                    <Breadcrumbs routes={routes} />\r\n                </Grid>\r\n                <Grid item xs={12} style={{ margin: \"1rem\" }}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={2}></Grid>\r\n                                <Grid item xs={8}>\r\n                                    {\r\n                                        openAlert && AlertMessage()\r\n                                    }\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={3}\r\n                                        alignContent=\"center\"\r\n                                        justify=\"center\"\r\n                                    >\r\n\r\n                                        {\r\n                                            isEditActive ?\r\n                                                <EditProfileForm setIsEditActive={setIsEditActive} userData={userData} setOpenAlert={setOpenAlert} /> :\r\n                                                <ShowProfile setIsEditActive={setIsEditActive} userData={userData} />\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\PositionDetails.jsx",["706","707","708"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Users.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\ListPostulants.jsx",["709","710","711"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\ApplicantProfile.jsx",["712","713","714","715","716","717","718"],"import React, { useEffect, useState } from \"react\";\r\nimport * as moment from 'moment';\r\nimport {Container,Divider,Grid,makeStyles,Typography} from \"@material-ui/core\";\r\n\r\nimport { Button, Breadcrumbs, Modal } from '../../shared/components';\r\nimport { checkCircleIcon, closeIcon, registeredIcon } from \"../images\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getApplicantProfile } from \"../../../store/actions/dashboard/dashboard.action\";\r\nimport { SessionRoutes } from '../../shared/libs/sessionRoutes';\r\nimport { service_Dashboard } from \"../../../store/services\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ApplicantProfile = () => {\r\n    const {postulant_id} = useParams()\r\n    const dispatch = useDispatch();\r\n    const {applicantProfile, applicantProfile:{user,job,education},publicationSelected} = useSelector(state => state.dashboard)\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [modalData, setModalData] = useState({title:\"\", body:\"\",method:\"\"})\r\n    const {id:publication_id} = publicationSelected.data;\r\n    const history = useHistory();\r\n    const initRoute = SessionRoutes().initRoute;\r\n    const routes = [\r\n    { name: \"Incio\", to: `${initRoute}` },\r\n    { name: \"Postulantes\", to: `${initRoute}/postulantes`},\r\n    { name: \"Perfil\", to: `${initRoute}/postulante/perfil` }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        dispatch(getApplicantProfile({postulant_id}))\r\n    },[])\r\n\r\n\r\n    const handleSaveOption = async (method) => {\r\n        \r\n        const {id : user_id} = applicantProfile.user;\r\n        // console.log(applicantProfile);\r\n        let obj ={ \r\n            user_id\r\n        }\r\n         switch (method) {\r\n             case 'select':\r\n                let response = await service_Dashboard.selectApplicant(obj,publication_id);\r\n                console.log(response);\r\n                 break;\r\n             case 'deny':\r\n                let response2 = await service_Dashboard.denyApplicant(obj,publication_id);\r\n                console.log(response2);\r\n                 break;\r\n             case 'hire':\r\n                let response3 = await service_Dashboard.hireApplicant(obj,publication_id);\r\n                console.log(response3);\r\n                 break\r\n             default:\r\n                 break;\r\n         }\r\n        setOpenModal(false);\r\n        history.push({ pathname: `${initRoute}/postulantes`, state: { publication_id } })\r\n      }\r\n\r\n    const modalBody = (\r\n        <>\r\n            <h3 className=\"dashboard-subtitle\">{modalData.title}</h3>\r\n            <br />\r\n            <p className=\"dashboard-applicant-data-response\">{modalData.body}</p>\r\n            <br />\r\n            <br />\r\n            <Grid container spacing={3} className=\"modal-button-container\">\r\n                <Grid item xs={6} justify=\"center\" alignItems=\"center\">\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        fullWidth\r\n\r\n                        className=\"secondary-button\"\r\n                        onClick={() => setOpenModal(false)}\r\n                    >\r\n                        CANCELAR\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={6} justify=\"center\" alignItems=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"large\"\r\n                        fullWidth\r\n                        className=\"principal-button\"\r\n                        onClick={() => handleSaveOption(modalData.method)}\r\n                    >\r\n                        guardar\r\n                </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Container >\r\n                <Grid container spacing={3} className=\"postulant-perfil\" style={{marginTop:\"20%\"}}>\r\n                    <Grid item xs={12} className=\"postulant-perfil__header\" style={{ position:\"fixed\", top:\"4rem\", background:\"white\" }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Breadcrumbs routes={routes} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container spacing={3} justify=\"flex-end\">\r\n                                            <Grid item spacing={3}>\r\n                                                <Button\r\n                                                    color=\"default\"\r\n                                                    onClick={() =>\r\n                                                        {setModalData({\r\n                                                            title: \"Seleccionar postulante\",\r\n                                                            body:`Ud. ha seleccionado a ${user?.fullname}`,\r\n                                                            method: 'select',\r\n                                                            cancelAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                            saveAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                        })\r\n                                                        setOpenModal(true)\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n                                                    <img src={registeredIcon} />\r\n                                                    <span className=\"dashboard-applicant-options\">\r\n                                                        seleccionar\r\n                                        </span>\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item spacing={3}>\r\n                                                <Button\r\n                                                    color=\"default\"\r\n                                                    onClick={() =>\r\n                                                        {setModalData({\r\n                                                            title: \"Descartar postulante\",\r\n                                                            body: `Ud. ha descartado a ${user?.fullname}`,\r\n                                                            method: 'deny',\r\n                                                            cancelAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                            saveAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                            \r\n                                                        })\r\n                                                        setOpenModal(true)\r\n                                                        }\r\n                                                    }\r\n                                                >\r\n                                                    <img src={closeIcon} />\r\n                                                    <span className=\"dashboard-applicant-options\">\r\n                                                        descartar\r\n                                        </span>\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item spacing={3}>\r\n                                                <Button\r\n                                                      color=\"default\"\r\n                                                    onClick={() =>\r\n                                                        {setModalData({\r\n                                                            title: \"Contratar postulante\",\r\n                                                            body: `Ud. desea contratar a ${user?.fullname}`,\r\n                                                            method: 'hire',\r\n                                                            cancelAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                            saveAction: () =>\r\n                                                                setModalData({ ...modalData, show: false }),\r\n                                                        })\r\n                                                        setOpenModal(true)\r\n                                                        }\r\n                                                    }\r\n                                                >\r\n                                                    <img src={checkCircleIcon} />\r\n                                                    <span className=\"dashboard-applicant-options dark-gray\">\r\n                                                        contratar\r\n                                        </span>\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <Typography variant=\"h4\" component=\"h4\">\r\n                                            <strong>{user?.fullname}</strong>\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={8}>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className=\"postulant-perfil__content\" style={{ margin: \"1rem\" }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    <strong>Datos personales</strong>\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Tipo de documento</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    DNI\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Numero de documento</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    76443280\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Fecha de nacimiento</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                {moment(user?.birth_date).format(\"YYYY-MM-DD\")}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Departamento/Provincia/Distrito</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {`${user?.department?.name}/${user?.province?.name}/${user?.district?.name}`}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Dirección</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {user?.address}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Referencias</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    -----\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>teléfono</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {user?.phone}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Correo electrónico</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {applicantProfile?.email}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Estado civil</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {user?.civil?.name}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Fecha de postulación</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {moment(user?.updatedAt).format(\"YYYY-MM-DD\")}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <Divider orientation=\"vertical\" />\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    <strong>Experiencia laboral</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>ÚLTIMA EXPERIENCIA LABORAL</strong>\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Cargo</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.job_level.name}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Empresa</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.name_inst}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Dirección de la empresa</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.address}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Rubro</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    ----------\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Fecha de inicio</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.from_year}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>fecha de fin</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.to_year}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Promedio de horas semanales</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.hour_rate}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Ingreso Mensual</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.monthly_income}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>¿Trabajaste horas extras?</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    { job && job[0]?.over_time}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>¿Cómo calificaría su grado de compromiso con la empresa\r\n                                    </strong>\r\n                                </Typography>\r\n                                <Typography variant=\"caption\" component=\"p\">\r\n                                    Del 1 al 5 siendo 1 totalmente descomprometido y 5 totalmente comprometido\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.involvement || \"----------\"}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>¿Qué tan satisfecho se siente/sintió con la relacion entre el trabajo y su vida personal?</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"caption\" component=\"p\">\r\n                                    Del 1 al 5 siendo 1 totalmente descomprometido y 5 totalmente comprometido\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                {job && job[0]?.job_sati}\r\n                                </Typography>\r\n                                <br />\r\n                                <br />\r\n                                \r\n\r\n                                <Typography variant=\"h6\" component=\"h6\">\r\n                                    <strong>Estudios</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Nivel máximo alcanzado</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {education && education[0]?.level?.name}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Institución educativa</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    { education && education[0]?.name_inst}\r\n                                </Typography>\r\n                                <br />\r\n                                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                                    <strong>Año de inicio</strong>\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"h6\">\r\n                                    {job && job[0]?.from_year}\r\n                                </Typography>\r\n                                <br />\r\n                                \r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Container>\r\n            <Modal\r\n                open={openModal}\r\n                handleCloseModal={() => setOpenModal(false)}\r\n            >\r\n                {modalBody}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ApplicantProfile;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\EditPosition.jsx",["719","720","721","722","723","724","725","726","727","728"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\pages\\Dashboard.jsx",["729","730"],"import React, { useEffect, useState } from \"react\";\r\nimport '../styles/Dashboard.css';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getJobsInfo, setPublicationSelected } from \"../../../store/actions/dashboard/dashboard.action\";\r\n\r\n// images\r\nimport { checkIcon, fileIcon, registeredIcon } from \"../images\";\r\n\r\n// components\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { Breadcrumbs, Button, Typography } from \"../../shared/components\";\r\nimport { CustomCard, OpenPositionsTable } from \"../components\";\r\n\r\nimport jobManagementChartOptions from \"../constants/jobManagementChartOptions\";\r\nimport { SessionRoutes } from \"../../shared/libs/sessionRoutes\";\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const { user } = useSelector(state => state?.auth);\r\n  const { jobsInfo } = useSelector(state => state.dashboard);\r\n  const dispatch = useDispatch();\r\n  const [jobManagementInfo, setJobManagementInfo] = useState({})\r\n\r\n  const initRoute = SessionRoutes().initRoute;\r\n  const routes = [{ name: \"Inicio\", to: `${initRoute}` }];\r\n\r\n  useEffect(() => {\r\n    dispatch(setPublicationSelected(\"\"));\r\n    dispatch(getJobsInfo())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    jobsInfo.areas = jobsInfo?.areas?.map(area => ({\r\n      name: area?.rubro?.name,\r\n      y: Number(area?.percent)\r\n    }))\r\n    setJobManagementInfo(jobsInfo);\r\n  }, [jobsInfo])\r\n\r\n  const goToPublishEmployment = () => history.push(`${initRoute}/posicion`);\r\n\r\n  return (\r\n    <Container className=\"dashboard-container\">\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Breadcrumbs routes={routes} />\r\n        </Grid>\r\n        <Grid item xs={12} style={{ margin: \"1rem\" }}>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <CustomCard className=\"dashboard-municipality-card\" borderRadius=\"10px\">\r\n                <Typography variant=\"h5\" component=\"h5\" className=\"title-color\">\r\n                  {user?.account?.razon_social}\r\n                </Typography>\r\n                <Typography variant=\"body1\" className=\"title-color\">\r\n                  {/* cambiar ruc a dinamico */}\r\n                  RUC: {user?.account?.user?.document_number}\r\n                </Typography>\r\n              </CustomCard>\r\n            </Grid>\r\n            {\r\n             ( user.account.role === \"muni\" || user.account.role === \"sub-muni\") &&\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" component=\"h6\" className=\"title-color\">\r\n                      Gestión de empleos\r\n                  </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomCard borderRadius=\"4px\">\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={4}>\r\n                          <Grid container spacing={0} justify=\"center\" alignContent=\"space-around\" style={{ height: \"100%\" }}>\r\n                            <Grid item xs={12}>\r\n                              <DataCard img={registeredIcon} text=\"Registrados\" quantity={jobManagementInfo?.registrados} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DataCard img={fileIcon} text=\"En proceso\" quantity={jobManagementInfo?.en_proceso} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <DataCard img={checkIcon} text=\"Contratados\" quantity={jobManagementInfo?.contratados} />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <HighchartsReact highcharts={Highcharts} options={jobManagementChartOptions(\"Gestión de empleos\", jobManagementInfo.areas)} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CustomCard>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n            <Grid item xs={12}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h6\" component=\"h6\" className=\"title-color\">\r\n                    Posiciones abiertas\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Grid container direction=\"row\" justify=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={goToPublishEmployment}>PUBLICAR EMPLEO</Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <OpenPositionsTable />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nconst DataCard = ({ img, text, quantity }) => (\r\n  <Grid container spacing={2} className=\"dashboard-data-card\">\r\n    <Grid item xs={8}>\r\n      <img src={img} />&nbsp;&nbsp;\r\n      <Typography variant=\"h6\" component=\"span\">\r\n        {text}\r\n      </Typography>\r\n    </Grid>\r\n    <Grid item xs={4}>\r\n      <Typography variant=\"h5\" component=\"p\">\r\n        {quantity}\r\n      </Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default Dashboard;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\pages\\Home.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\pages\\Requests.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\pages\\Home.jsx",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\utils.service.temp.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\utils\\utils.action.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\DataTableUser\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\services\\utils.service.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\constants\\jobManagementChartOptions.js",["731"],"export default (name, data) => ({\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: \"pie\",\r\n        height: \"230px\",\r\n    },\r\n    colors: [\"#CBCAC8\", \"#A2EE37\", \"#FCB81A\", \"#F75470\", \"#7F85FD\", \"#373737\"],\r\n    title: {\r\n        text: \"\",\r\n    },\r\n    tooltip: {\r\n        pointFormat: \"{series.name}: <b>{point.percentage:.1f}%</b>\",\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: \"%\",\r\n        },\r\n    },\r\n    legend: {\r\n        align: \"right\",\r\n        layout: \"vertical\",\r\n        verticalAlign: \"middle\",\r\n        x: 10,\r\n        y: 0,\r\n        labelFormatter: function () {\r\n            return this.name + \" \" + Math.round(this.percentage) + \"%\";\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            size: \"100%\",\r\n            allowPointSelect: true,\r\n            cursor: \"pointer\",\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            showInLegend: true,\r\n        },\r\n    },\r\n    series: [\r\n        {\r\n            name,\r\n            colorByPoint: true,\r\n            data,\r\n        },\r\n    ],\r\n});","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\dashboard\\dashboard.action.js",["732","733","734","735"],"import { service_Dashboard } from \"../../services\";\r\nimport { dashboardType } from \"../../types/dashboard\";\r\n\r\nexport const setJobsInfo = (payload) => ({\r\n  type: dashboardType.SET_JOBS_INFO,\r\n  payload\r\n});\r\n\r\nexport const setJobsInfoError = (payload) => ({\r\n  type: dashboardType.SET_JOBS_INFO_ERROR,\r\n  payload\r\n});\r\nexport const setPublicationsInfo = (payload) => ({\r\n  type: dashboardType.SET_PUBLICATIONS_INFO,\r\n  payload\r\n});\r\n\r\nexport const setPublicationsErrorInfo = (payload) => ({\r\n  type: dashboardType.SET_PUBLICATIONS_INFO_ERROR,\r\n  payload\r\n});\r\n\r\nexport const setUpdatePublicationError = (payload) => ({\r\n  type: dashboardType.SET_UPDATE_PUBLICATION_ERROR,\r\n  payload\r\n});\r\n\r\nexport const setSavePublicationError = (payload) => ({\r\n  type: dashboardType.SET_SAVE_PUBLICATION_ERROR,\r\n  payload\r\n});\r\n\r\nexport const setPublicationSelected = (payload) => ({\r\n  type: dashboardType.SET_PUBLICATION_SELECTED,\r\n  payload\r\n});\r\n\r\nexport const getJobsInfo = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.getJobs();\r\n      console.log(\"response getInfo\", response)\r\n      dispatch(setJobsInfo(response.data));\r\n      dispatch(setJobsInfoError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setJobsInfoError(\"Ha ocurrido un error interno.\"));\r\n      } else {\r\n        if (error.response.status === 401) {\r\n          dispatch(setJobsInfoError(error.response.data.message));\r\n        } else if (error.response.status === 409) {\r\n          dispatch(setJobsInfoError(\"La cuenta ya existe. Por favor Iniciar sesión.\"));\r\n        } else {\r\n          dispatch(setJobsInfoError(\"Ha ocurrido un error interno.\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPublicationsInfo = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.getPublications();\r\n      dispatch(setPublicationsInfo(response.data));\r\n      dispatch(setPublicationsErrorInfo(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setPublicationsErrorInfo(\"Ha ocurrido un error interno.\"));\r\n      } else {\r\n        if (error.response.status === 401) {\r\n          dispatch(setPublicationsErrorInfo(error.response.data.message));\r\n        } else {\r\n          dispatch(setPublicationsErrorInfo(\"Ha ocurrido un error interno.\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const updatePublication = (params) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.updatePublication(params);\r\n      dispatch(setUpdatePublicationError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setUpdatePublicationError(\"Ha ocurrido un error interno.\"));\r\n      } else {\r\n        if (error.response.status === 401) {\r\n          dispatch(setUpdatePublicationError(error.response.data.message));\r\n        } else {\r\n          dispatch(setUpdatePublicationError(\"Ha ocurrido un error interno.\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const savePublication = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.savePublication(body);\r\n      dispatch(setSavePublicationError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setSavePublicationError(\"Ha ocurrido un error interno.1\"));\r\n      } else {\r\n        if (error.response.status === 409) {\r\n          dispatch(setSavePublicationError(error.response.data.message));\r\n        } else {\r\n          dispatch(setSavePublicationError(\"Ha ocurrido un error interno.2\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const setArchivePublicationError = (payload) => ({\r\n  type: dashboardType.SET_ARCHIVE_PUBLICATION_ERROR,\r\n  payload\r\n});\r\n\r\nexport const archivePublication = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.archivePublication(body);\r\n      dispatch(getPublicationsInfo());\r\n      dispatch(setArchivePublicationError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setArchivePublicationError(\"Ha ocurrido un error interno.1\"));\r\n      } else {\r\n        if (error.response.status === 409) {\r\n          dispatch(setArchivePublicationError(error.response.data.message));\r\n        } else {\r\n          dispatch(setArchivePublicationError(\"Ha ocurrido un error interno.2\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const setDeletePublicationError = (payload) => ({\r\n  type: dashboardType.SET_DELETE_PUBLICATION_ERROR,\r\n  payload\r\n});\r\n\r\nexport const deletePublication = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.deletePublication(body);\r\n      dispatch(getPublicationsInfo());\r\n      dispatch(setDeletePublicationError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setDeletePublicationError(\"Ha ocurrido un error interno.1\"));\r\n      } else {\r\n        if (error.response.status === 409) {\r\n          dispatch(setDeletePublicationError(error.response.data.message));\r\n        } else {\r\n          dispatch(setDeletePublicationError(\"Ha ocurrido un error interno.2\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const setPostulantsByPublicationIdError = (payload) => ({\r\n  type: dashboardType.SET_POSTULANTS_BY_PUBLICATION_ID_ERROR,\r\n  payload\r\n});\r\nexport const setPostulantsByPublicationId = (payload) => ({\r\n  type: dashboardType.SET_POSTULANTS_BY_PUBLICATION_ID,\r\n  payload\r\n});\r\n\r\nexport const getPostulantsByPublicationId = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.getPostulantsByPublicationId(body);\r\n      dispatch(setPostulantsByPublicationId(response.data));\r\n      dispatch(setPostulantsByPublicationIdError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setPostulantsByPublicationIdError(\"Ha ocurrido un error interno.1\"));\r\n      } else {\r\n        if (error.response.status === 409) {\r\n          dispatch(setPostulantsByPublicationIdError(error.response.data.message));\r\n        } else {\r\n          dispatch(setPostulantsByPublicationIdError(\"Ha ocurrido un error interno.2\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const setApplicantProfileError = (payload) => ({\r\n  type: dashboardType.SET_APPLICANT_PROFILE_ERROR,\r\n  payload\r\n});\r\nexport const setApplicantProfile = (payload) => ({\r\n  type: dashboardType.SET_APPLICANT_PROFILE,\r\n  payload\r\n});\r\n\r\nexport const getApplicantProfile = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await service_Dashboard.getApplicantProfile(body);\r\n      dispatch(setApplicantProfile(response.data.profile));\r\n      dispatch(setApplicantProfileError(null)); //control de errores\r\n    } catch (error) {\r\n      if (!error.response) {\r\n        dispatch(setApplicantProfileError(\"Ha ocurrido un error interno.1\"));\r\n      } else {\r\n        if (error.response.status === 409) {\r\n          dispatch(setApplicantProfileError(error.response.data.message));\r\n        } else {\r\n          dispatch(setApplicantProfileError(\"Ha ocurrido un error interno.2\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n};\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\images\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\hooks\\useForm\\index.js",["736","737","738","739","740"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\hooks\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\images\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\images\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RequestRecoverSent\\index.js",["741"],"import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { Button } from '../../../shared/components';\r\nimport { peopleSVG } from \"../../images\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Index(props) {\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ padding: 20, height: \"80vh\" }}>\r\n                <Grid item xs={12} lg={8}>\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item sm={12} md={6}>\r\n                            <img src={peopleSVG} alt=\"\" />\r\n                        </Grid>\r\n                        <Grid item sm={12} md={6}>\r\n                            <Typography variant=\"h4\" component=\"h4\">\r\n                                Te hemos enviado un correo electrónico con las instrucciones para restablecer tu contraseña\r\n                            </Typography>\r\n                            <Grid item xs={12} style={{ display: 'flex', justifyContent: \"center\", marginTop: \"2rem\" }}>\r\n                                <Button variant=\"contained\" size=\"large\" href={process.env.REACT_APP_PATH_LANDING}>Volver al Inicio</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RequestNewPasswordSent\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\DeleteSubUserModal\\index.js",["742","743","744","745","746"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { FormControl, IconButton, FormHelperText, FormControlLabel, Grid, Radio, RadioGroup, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\nimport { Button } from '../../../shared/components';\r\nimport { useForm } from \"../../../hooks/useForm\"\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\n\r\nconst initialValues = {\r\n    password: '',\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const randValue = rand();\r\n    const top = 50 + randValue;\r\n    const left = 50 + randValue;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n        outline: 'none'\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        borderRadius: 10\r\n    },\r\n    button: {\r\n        marginTop: 5\r\n    }\r\n}));\r\n\r\nexport default function SimpleModal({ handleCloseModal, executeAction, ...props }) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [option, setOption] = React.useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setOption(e.target.value)\r\n    }\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('password' in fieldValues)\r\n            temp.password = fieldValues.password ? \"\" : \"El campo es requerido.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n\r\n    const handleSave = () => {\r\n        const { password } = values;\r\n        if (option == \"accept\") {\r\n            executeAction(password);\r\n        } else {\r\n            handleCloseModal();\r\n        }\r\n    }\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h3 id=\"simple-modal-title\">¿Deseas eliminar a los usarios seleccionados?</h3>\r\n            <FormControl component=\"fieldset\" fullWidth={true}>\r\n                <Grid container spacing={3} style={{ padding: 10 }}>\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <RadioGroup aria-label=\"option\" name=\"option\" value={option} onChange={handleChange} row>\r\n                            <FormControlLabel value=\"accept\" control={<Radio />} label=\"Aprobar\" />\r\n                            <FormControlLabel value=\"deny\" control={<Radio />} label=\"Rechazar\" />\r\n                        </RadioGroup>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <p>Por seguridad ingresa tu contraseña para continuar.</p>\r\n                        <FormControl className=\"sign-in__input-container\" variant=\"outlined\" fullWidth error={errors.password ? true : false}>\r\n                            <InputLabel htmlFor=\"outlined-password\" >Ingrese contraseña</InputLabel>\r\n                            <OutlinedInput\r\n                                name=\"password\"\r\n                                id=\"outlined-password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                onChange={handleInputChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            id=\"outlined-password-icon\"\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={() => setShowPassword(!showPassword)}\r\n                                            // onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={127}\r\n                            />\r\n                            <FormHelperText>{errors.password}</FormHelperText>\r\n                        </FormControl>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </FormControl>\r\n            <Grid container spacing={3} direction=\"row\" justify=\"center\" className={classes.button}>\r\n                <Grid item >\r\n                    <Button variant=\"outlined\" onClick={handleCloseModal}>CANCELAR</Button>\r\n                </Grid>\r\n                <Grid item >\r\n                    <Button variant=\"contained\" onClick={handleSave} disabled={(option == \"\" ? true : false) || disabledButtonState}>ACEPTAR</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                // open={open}\r\n                // onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                {...props}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\SubUserModal\\index.js",["747","748","749"],"import React from 'react';\r\nimport { FormControl, Grid } from '@material-ui/core';\r\nimport { Button, TextInput, Modal } from '../../../shared/components';\r\nimport { useForm } from \"../../../hooks/useForm\"\r\nimport { isEmail } from \"../../../shared/libs/validators\";\r\n\r\n\r\nconst initialValues = {\r\n    first_name: '',\r\n    last_name: '',\r\n    cargo_input: '',\r\n    area_input: '',\r\n    email: '',\r\n}\r\n\r\nexport default function SimpleModal({ open, handleCloseModal, executeAction }) {\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('first_name' in fieldValues)\r\n            temp.first_name = fieldValues.first_name ? \"\" : \"El campo es requerido.\"\r\n        if ('last_name' in fieldValues)\r\n            temp.last_name = fieldValues.last_name ? \"\" : \"El campo es requerido.\"\r\n        if ('cargo_input' in fieldValues)\r\n            temp.cargo_input = fieldValues.cargo_input ? \"\" : \"El campo es requerido.\"\r\n        if ('area_input' in fieldValues)\r\n            temp.area_input = fieldValues.area_input ? \"\" : \"El campo es requerido.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? (isEmail(fieldValues.email) ? \"\" : \"Correo electronico no válido\") : \"El campo es requerido.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const handleSave = () => {\r\n        const { email, first_name, last_name, area_input, cargo_input } = values\r\n        let valuesTemp = {\r\n            email,\r\n            user: {\r\n                first_name,\r\n                last_name,\r\n                area_input,\r\n                cargo_input\r\n            }\r\n        }\r\n        executeAction(valuesTemp)\r\n    }\r\n\r\n    const body = (\r\n        <>\r\n            <h2 id=\"simple-modal-title\">Nuevo Usuario</h2>\r\n            <FormControl component=\"fieldset\" fullWidth={true}>\r\n                <Grid container spacing={3} style={{ padding: 10 }}>\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <TextInput\r\n                            fullWidth\r\n                            name=\"first_name\"\r\n                            label=\"Nombre\"\r\n                            value={values.first_name}\r\n                            onChange={handleInputChange}\r\n                            error={errors.first_name ? true : false}\r\n                            helperText={errors.first_name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <TextInput\r\n                            fullWidth\r\n                            name=\"last_name\"\r\n                            label=\"Apellido\"\r\n                            value={values.last_name}\r\n                            onChange={handleInputChange}\r\n                            error={errors.last_name ? true : false}\r\n                            helperText={errors.last_name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <TextInput\r\n                            fullWidth\r\n                            name=\"cargo_input\"\r\n                            label=\"Cargo\"\r\n                            value={values.cargo_input}\r\n                            onChange={handleInputChange}\r\n                            error={errors.cargo_input ? true : false}\r\n                            helperText={errors.cargo_input}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <TextInput\r\n                            fullWidth\r\n                            name=\"area_input\"\r\n                            label=\"Area\"\r\n                            value={values.area_input}\r\n                            onChange={handleInputChange}\r\n                            error={errors.area_input ? true : false}\r\n                            helperText={errors.area_input}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} justify=\"center\">\r\n                        <TextInput\r\n                            fullWidth\r\n                            name=\"email\"\r\n                            label=\"Correo eletrónico\"\r\n                            value={values.email}\r\n                            onChange={handleInputChange}\r\n                            error={errors.email ? true : false}\r\n                            helperText={errors.email}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </FormControl>\r\n            <Grid container spacing={3} direction=\"row\" justify=\"center\" style={{ marginTop: 5 }}>\r\n                <Grid item >\r\n                    <Button variant=\"outlined\" onClick={handleCloseModal}>CANCELAR</Button>\r\n                </Grid>\r\n                <Grid item >\r\n                    <Button variant=\"contained\" onClick={handleSave} disabled={disabledButtonState}>ACEPTAR</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleCloseModal}\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\ShowProfile\\index.js",["750","751","752","753"],"import React, { useState } from 'react'\r\nimport { Divider, Grid } from \"@material-ui/core\";\r\nimport { Button, Typography } from \"../../../shared/components\";\r\nimport { editIcon } from \"../../images\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function Showprofile({ setIsEditActive, userData }) {\r\n    const { auth: { user: { account } }, utils: { items } } = useSelector(state => state);\r\n\r\n    const getNameSpecialityById = (rubro_id) => {\r\n        if (rubro_id === \"\") {\r\n            return \"\"\r\n        } else {\r\n            const rubro = items.filter(item => item.id === rubro_id)\r\n            return rubro[0]?.name\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Grid item xs={9}>\r\n                <Typography variant=\"h6\" component=\"h6\">\r\n                    <strong>{account.role == \"business\" ? \"Datos de la empresa\" : \"Datos de la municipalidad\"}</strong>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xs={3}\r\n                justify=\"flex-end\"\r\n                className=\"edit-container\"\r\n            >\r\n                <Button onClick={() => setIsEditActive(true)}>\r\n                    <img src={editIcon} />\r\n                    <span className=\"dashboard-title\">EDITAR</span>\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Razón social</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.razon_social}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>RUC</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.document_number}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Teléfono</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.phone}\r\n                </Typography>\r\n                <br />\r\n                {\r\n                    account.role == \"business\" &&\r\n                    <>\r\n                        <Typography variant=\"subtitle2\" component=\"h6\">\r\n                            <strong>Rubro</strong>\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                            {getNameSpecialityById(userData.rubro)}\r\n                        </Typography>\r\n                    </>\r\n                }\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h6\" component=\"h6\">\r\n                    <strong> Datos del representante</strong>\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Nombre</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.first_name}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Apellidos</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.last_name}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Correo electrónico</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.email}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Cargo</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.position}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    <strong>Área</strong>\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"h6\">\r\n                    {userData.area}\r\n                </Typography>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\EditProfileForm\\index.js",["754","755","756","757"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nimport { Button, TextInput } from \"../../../shared/components\";\r\nimport { useForm } from \"../../../hooks\";\r\nimport { isEmail, isRuc } from \"../../../shared/libs/validators\";\r\n\r\nimport { updateAccount } from \"../../../../store/actions/auth/auth.action\";\r\n\r\nexport default function Editprofile({ setIsEditActive, userData, setOpenAlert }) {\r\n    const { auth: { user: { account } }, utils: { items } } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('razon_social' in fieldValues)\r\n            temp.razon_social = fieldValues.razon_social ? \"\" : \"El campo es requerido.\"\r\n        if ('document_number' in fieldValues)\r\n            temp.document_number = fieldValues.document_number ? (isRuc(fieldValues.document_number) ? \"\" : \"El RUC debe ser de 11 digitos\") : \"El campo es requerido.\"\r\n        if ('first_name' in fieldValues)\r\n            temp.first_name = fieldValues.first_name ? \"\" : \"El campo es requerido.\"\r\n        if ('last_name' in fieldValues)\r\n            temp.last_name = fieldValues.last_name ? \"\" : \"El campo es requerido.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? (isEmail(fieldValues.document_number) ? \"\" : \"Ingrese un correo electronico válido.\") : \"El campo es requerido.\"\r\n        if ('position' in fieldValues)\r\n            temp.position = fieldValues.position ? \"\" : \"El campo es requerido.\"\r\n        if ('area' in fieldValues)\r\n            temp.area = fieldValues.area ? \"\" : \"El campo es requerido.\"\r\n        if (account.role == \"business\") {\r\n            if ('rubro' in fieldValues)\r\n                temp.rubro = fieldValues.rubro ? \"\" : \"El campo es requerido.\"\r\n        }\r\n\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(userData, true, validate);\r\n\r\n    const handleUpdate = async () => {\r\n        let body = {\r\n            email: values.email,\r\n            razon_social: values.razon_social,\r\n            user: {\r\n                first_name: values.first_name,\r\n                last_name: values.last_name,\r\n                document_number: values.document_number,\r\n                phone: values.phone,\r\n                area_input: values.area,\r\n                cargo_input: values.position,\r\n                interest_rubro_id: values.rubro\r\n            }\r\n        }\r\n        dispatch(updateAccount(body))\r\n        setIsEditActive(false)\r\n        setOpenAlert(true)\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12}>\r\n                <h2 className=\"dashboard-subtitle\">\r\n                    Datos de la empresa\r\n                </h2>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Razón social\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"razon_social\"\r\n                    value={values.razon_social}\r\n                    onChange={handleInputChange}\r\n                    error={errors.razon_social ? true : false}\r\n                    helperText={errors.razon_social}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"RUC\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"document_number\"\r\n                    value={values.document_number}\r\n                    onChange={handleInputChange}\r\n                    error={errors.document_number ? true : false}\r\n                    helperText={errors.document_number}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Teléfono\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"phone\"\r\n                    value={values.phone}\r\n                    onChange={handleInputChange}\r\n                    error={errors.phone ? true : false}\r\n                    helperText={errors.phone}\r\n                />\r\n            </Grid>\r\n\r\n            {\r\n                account.role === \"business\" &&\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"outlined\" fullWidth error={errors.rubro ? true : false}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Rubro</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            name=\"rubro\"\r\n                            value={values.rubro || \"\"}\r\n                            onChange={handleInputChange}\r\n                            label=\"Rubro\"\r\n                        >\r\n                            {items.length > 0 && items.map(element =>\r\n                                <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                        <FormHelperText>{errors.rubro}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            }\r\n\r\n            <Grid item xs={12}></Grid>\r\n            <Grid item xs={12}>\r\n                <h2 className=\"dashboard-subtitle\">\r\n                    Datos del representante\r\n                </h2>\r\n            </Grid>\r\n            <br />\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Nombre\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"first_name\"\r\n                    value={values.first_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.first_name ? true : false}\r\n                    helperText={errors.first_name}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Apellidos\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"last_name\"\r\n                    value={values.last_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.last_name ? true : false}\r\n                    helperText={errors.last_name}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Correo electrónico\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                    error={errors.email ? true : false}\r\n                    helperText={errors.email}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Cargo\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"position\"\r\n                    value={values.position}\r\n                    onChange={handleInputChange}\r\n                    error={errors.position ? true : false}\r\n                    helperText={errors.position}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextInput\r\n                    id=\"outlined-basic\"\r\n                    label=\"Área\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"area\"\r\n                    value={values.area}\r\n                    onChange={handleInputChange}\r\n                    error={errors.area ? true : false}\r\n                    helperText={errors.area}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                    onClick={() => setIsEditActive(false)}\r\n                >\r\n                    CANCELAR\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    fullWidth\r\n                    onClick={handleUpdate}\r\n                    disabled={disabledButtonState}\r\n                >\r\n                    ACTUALIZAR\r\n                </Button>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\OpenPositionsTable\\index.js",["758","759","760","761","762"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\dashboard\\components\\CustomCard\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\applicant\\components\\ApplicantDataTable\\index.js",["763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es';\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport './index.css'\r\nimport { Grid, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Toolbar, Paper, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { Button, Checkbox, Chip, Typography } from \"../../../shared/components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SessionRoutes } from \"../../../shared/libs/sessionRoutes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { service_ApplicantPublication } from \"../../../store/services\";\r\n// import { service_ApplicantPublication } from \"../../../../store/services\";\r\nimport { setPublicationSelected, getPublicationAccount } from '../../../../store/actions/applicant/applicant.action'\r\n\r\n\r\nimport {\r\n    calendarIcon,\r\n    registeredIcon,\r\n    editIcon,\r\n    fileIcon,\r\n    folderIcon,\r\n    deleteIcon,\r\n} from \"../../../dashboard/images\";\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array = [], comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction createData(\r\n    title,\r\n    date,\r\n    createBy,\r\n    publicationDate,\r\n    salary,\r\n    actions,\r\n    data\r\n) {\r\n    return { title, date, createBy, publicationDate, salary, actions, data };\r\n}\r\n\r\n\r\nconst headCells = [\r\n    {\r\n        id: \"title\",\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: \"Título de la publicación\",\r\n    },\r\n    {\r\n        id: \"publicationDate\",\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: \"Fecha de publicación\",\r\n    },\r\n    {\r\n        id: \"salary\",\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: \"Salario\",\r\n    },\r\n    { numeric: false, disablePadding: true },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const {\r\n        classes,\r\n        onSelectAllClick,\r\n        order,\r\n        orderBy,\r\n        numSelected,\r\n        rowCount,\r\n        onRequestSort,\r\n    } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? \"right\" : \"left\"}\r\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                        style={{ width: 100 }}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : \"asc\"}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            <span className={classes.headCellLabel}>{headCell.label}</span>\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    headCellLabel: {\r\n        color: \"#222121\",\r\n        fontSize: 16,\r\n    },\r\n}));\r\n\r\nexport default function ApplicantDataTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = useState(\"asc\");\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    // const [selected,setSelected]=useState([]);\r\n    const [page, setPage] = useState(0)\r\n    const [dense, setDense] = useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [publications, setPublications] = useState([createData(\"\", \"\", \"\", moment().format('LL'), 0, [], { id: \"\" })])\r\n\r\n\r\n    const { publicationsAccount } = useSelector(state => state?.applicant);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const initRoute = SessionRoutes().initRoute;\r\n\r\n    useEffect(() => {\r\n        dispatch(getPublicationAccount());\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const rows = publicationsAccount?.data?.map(({ publication }) => (\r\n            createData(\r\n                publication.job_title,\r\n                moment(publication.to_date).format('LL'),\r\n                publication?.account?.user?.fullname,\r\n                moment(publication.createdAt).format('LL'),\r\n                publication.salary,\r\n                [\r\n                    {\r\n                        id: \"show\",\r\n                        name: \"Ver Más\",\r\n                    }\r\n                ],\r\n                publication\r\n            )\r\n        ))\r\n        setPublications(rows)\r\n\r\n    }, [publicationsAccount])\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === \"asc\";\r\n        setOrder(isAsc ? \"desc\" : \"asc\");\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n\r\n    const executeAction = (event, id, publication) => {\r\n        event.preventDefault();\r\n        dispatch(setPublicationSelected(publication));\r\n        // console.log(initRoute)\r\n        if (id === \"show\") history.push(`/postulante/postulaciones/ver-publicacion`);\r\n        // if (id === \"archive\") dispatch(archivePublication({ id: publication.id }));\r\n    }\r\n\r\n    const emptyRows =\r\n        rowsPerPage - Math.min(rowsPerPage, publications?.length - page * rowsPerPage);\r\n\r\n\r\n\r\n    return (<div className=\"open-positions-table\">\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? \"small\" : \"medium\"}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            // numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            // onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={publications?.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(publications, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    {/* const isItemSelected = isSelected(row.data.id); */ }\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            // role=\"checkbox\"\r\n                                            // aria-checked={isItemSelected}\r\n                                            // tabIndex={-1}\r\n                                            key={row.data.id}\r\n                                        // selected={isItemSelected}\r\n                                        >\r\n\r\n                                            <TableCell align=\"left\">\r\n                                                <Grid container spacing={0}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant=\"h6\" component=\"span\">\r\n                                                            {row.title}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} className=\"text-with-icon-container\">\r\n                                                        <img src={calendarIcon} alt=\"Calendario\" />{\" \"}\r\n                                                        <Typography variant=\"body2\" component=\"span\">Caduca {row.date}</Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Typography variant=\"body2\" component=\"span\">\r\n                                                            Creado por {row.createBy}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Grid item xs={12} className=\"text-with-icon-container\">\r\n                                                    <img src={calendarIcon} alt=\"Calendario\" />{\" \"}\r\n                                                    <Typography variant=\"body2\" component=\"span\">{row.publicationDate}</Typography>\r\n                                                </Grid>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <Grid item xs={12} className=\"text-with-icon-container\">\r\n                                                    {/* <img src={calendarIcon} alt=\"Calendario\" />{\" \"} */}\r\n                                                    <Typography variant=\"body2\" component=\"span\">{row.salary}</Typography>\r\n                                                </Grid>\r\n\r\n                                                {/* <Chip label={row.state ? \"Activo\" : \"Inactivo\"} color={row.state ? \"primary\" : \"\"} /> */}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                {row.actions.map((action, index) => (\r\n                                                    <Chip key={index} onClick={(event) => executeAction(event, action.id, row.data)} label={action.name} color={\"primary\"} />\r\n                                                ))}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    className=\"table-pagination\"\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={publications?.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    labelRowsPerPage=\"Filas por página\"\r\n                    labelDisplayedRows={({ from, to, count }) => `${from}-${to} de ${count !== -1 ? count : to}`}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyNumbers.js",["784"],"export default (value) => {\r\n    let key = window.event ? value.which : value.keyCode;\r\n    if (key < 48 || key > 57) {\r\n        value.preventDefault();\r\n    }\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyLetters.js",["785"],"import { LETTERS_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    const regex = LETTERS_REGEX;\r\n    var key = String.fromCharCode(!value.charCode ? value.which : value.charCode);\r\n    if (!regex.test(key)) {\r\n        value.preventDefault();\r\n        return false;\r\n    }\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\onlyAlphaNumeric.js",["786"],"export default (value) => {\r\n    var allowedCode = [8, 13, 32, 44, 45, 46, 95];\r\n    var charCode = (value.charCode) ? value.charCode : ((value.keyCode) ? value.keyCode :\r\n        ((value.which) ? value.which : 0));\r\n    if (charCode > 31 && (charCode < 64 || charCode > 90) &&\r\n        (charCode < 97 || charCode > 122) &&\r\n        (charCode < 48 || charCode > 57) &&\r\n        (allowedCode.indexOf(charCode) === -1)) {\r\n        value.preventDefault();\r\n    }\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isPhone.js",["787"],"import { NUMBER_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    const regex = NUMBER_REGEX;\r\n    return value.length === 9 && regex.test(String(value));\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isEmailCorporate.js",["788"],"import { EMAIL_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    let state = false\r\n    const regex = EMAIL_REGEX;\r\n    let email = String(value).toLowerCase()\r\n    if (regex.test(email)) {\r\n        const dom = email.slice(email.indexOf(\"@\"))\r\n        if (dom !== \"@gmail.com\" && dom !== \"@hotmail.com\" && dom !== \"@outlook.com\") {\r\n            state = true\r\n        }\r\n    };\r\n    return state;\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isDni.js",["789"],"import { NUMBER_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    const regex = NUMBER_REGEX;\r\n    return value.length === 8 && regex.test(String(value));\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isRuc.js",["790"],"import { NUMBER_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    const regex = NUMBER_REGEX;\r\n    return value.length === 11 && regex.test(String(value));\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\libs\\validators\\isEmail.js",["791"],"import { EMAIL_REGEX } from \"../../../global/constants/validations\";\r\n\r\nexport default (value) => {\r\n    const regex = EMAIL_REGEX;\r\n    return regex.test(String(value).toLowerCase());\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\admin\\components\\RequestsDataTable\\index.js",["792","793"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\Footer\\index.js",["794"],"import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport './index.css';\r\n\r\nimport logoDarkSVG from './images/logoDark.svg';\r\nimport facebookWhiteSVG from './images/facebookWhite.svg';\r\nimport instagramWhiteSVG from './images/instagramWhite.svg';\r\nimport twitterWhiteSVG from './images/twitterWhite.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Footer = () => (\r\n    <Grid item xs={12} justify=\"center\" style={{ background: \"var(--paragraphColor)\" }}>\r\n        <Grid item xs={12} md={11} lg={11} justify=\"center\" style={{ padding: \"1.5rem\", margin: \"auto\" }}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={5} justify=\"center\">\r\n                    <img src={logoDarkSVG} alt=\"Operativa\" />\r\n                </Grid>\r\n                <Grid item xs={3} justify=\"center\">\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-subtitle\">\r\n                                REDES\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <a href=\"https://www.facebook.com\" rel=\"noopener noreferrer\" target=\"_blank\" title=\"Facebook\">\r\n                                <img src={facebookWhiteSVG} alt=\"Facebook\" />\r\n                            </a>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <a href=\"https://www.instagram.com\" rel=\"noopener noreferrer\" target=\"_blank\" title=\"Instagram\">\r\n                                <img src={instagramWhiteSVG} alt=\"Instagram\" />\r\n                            </a>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <a href=\"https://www.twitter.com\" rel=\"noopener noreferrer\" target=\"_blank\" title=\"Twitter\">\r\n                                <img src={twitterWhiteSVG} alt=\"Twitter\" />\r\n                            </a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4} justify=\"center\">\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-subtitle\">\r\n                                CONTACTO\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5} md={4} lg={3}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                Teléfono :\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7} md={8} lg={9}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                (01) 247-2829 / 923 890 165\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5} md={4} lg={3}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                Mail :\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7} md={8} lg={9}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                comercial@operativa.com\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={5} md={4} lg={3}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                Dirección :\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={7} md={8} lg={9}>\r\n                            <Typography variant=\"body2\" component=\"p\" className=\"footer-text\">\r\n                                Jr. Alfonso Ugarte 235, Of.103, Barranco\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n)\r\n\r\nexport default Footer;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\home\\components\\BusinessCarousel\\index.js",["795"],"import React, { useState } from 'react';\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport { CardMedia, Grid } from '@material-ui/core';\r\nimport './index.css';\r\n\r\nfunction Banner(props) {\r\n    const totalItems = props.length ? props.length : 3;\r\n    const mediaLength = totalItems;\r\n\r\n    let items = [];\r\n\r\n    for (let i = 0; i < mediaLength; i++) {\r\n        const item = props.item.items[i];\r\n        const media = (\r\n            <Grid item xs={12 / totalItems} key={item.name}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    image={item.image}\r\n                    title={item.name}\r\n                    alt={item.name}\r\n                >\r\n                </CardMedia>\r\n            </Grid>\r\n        )\r\n        items.push(media);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={5} className=\"business-carousel-images-container\">\r\n            {items}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst BusinessCarousel = ({ items }) => {\r\n    return (\r\n        <div style={{ marginTop: \"0.5rem\", color: \"#494949\" }}>\r\n            <Carousel\r\n                autoPlay\r\n                stopAutoPlayOnHover={false}\r\n                interval={5000}\r\n                indicators={false}\r\n                animation=\"slide\"\r\n                timeout={100}\r\n                swipe={false}\r\n                navButtonsAlwaysVisible={false}\r\n                navButtonsAlwaysInvisible={true}\r\n                fullHeightHover={true}\r\n            >\r\n                {\r\n                    items.map((item, index) => <Banner item={item} key={index} contentPosition={item.contentPosition} />)\r\n                }\r\n            </Carousel>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BusinessCarousel;\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\store\\actions\\applicant\\applicant.action.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantAreasOfInterestForm\\index.js",["796","797"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\index.js",["798","799","800","801","802","803","804","805","806","807","808"],"import React, { useState, useEffect } from 'react';\r\nimport { Divider, FormControl, FormControlLabel, FormHelperText, FormLabel, Grid, InputLabel, MenuItem, RadioGroup, Select, Typography } from '@material-ui/core';\r\n\r\nimport { Radio } from '../../../shared/components';\r\nimport { areasList, getAccount, specialtiesList } from '../../../../store/services/utils.service';\r\nimport WithExperienceComponent from './WithExperienceComponent';\r\nimport WithoutExperienceComponent from './WithoutExperienceComponent';\r\nimport WorkExperienceListComponent from \"./WorkExperienceListComponent\";\r\n\r\nconst defaultValues = {\r\n    position: \"\",\r\n    company: \"\",\r\n    companyAddress: \"\",\r\n    rubro_id: \"\",\r\n    startDate: \"\",\r\n    finishDate: null,\r\n    weeklyHours: \"\",\r\n    monthlyIncome: \"\",\r\n    hasExtraHours: \"\",\r\n    commitmentDegree: \"\",\r\n    workingRelationship: \"\",\r\n    withdrawalReason: null,\r\n\r\n}\r\n\r\nconst initialValues = [defaultValues]\r\n\r\nexport default function ApplicantWorkExperienceForm({ userData = initialValues, handleSaveWorkExperience, handleUpdateWorkExperience, history }) {\r\n    const [hasExperience, setHasExperience] = useState({ value: '', error: false });\r\n    // const [disabledButton, setDisabledButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setHasExperience({ ...hasExperience, value: Array.isArray(userData) ? 'withExperience' : (userData?.interest_area_id ? 'withoutExperience' : '') });\r\n        getAccount();\r\n    }, [userData])\r\n\r\n    // useEffect(() => {\r\n    //     const isButtonDisabled = Array.isArray(userData) ? userData.map(data => (Object.values(data).includes(\"\"))).includes(true) : Object.values(userData).map(data => !!data).includes(true);\r\n    //     // setDisabledButton(isButtonDisabled)\r\n    // }, [userData])\r\n\r\n    // const validateHasExperience = (value = hasExperience.value) => setHasExperience({ value: value, error: !value });\r\n\r\n    const handleCheckBox = (value = hasExperience.value) => {\r\n        setHasExperience({ value: value, error: !value })\r\n        if (value === \"withExperience\") handleUpdateWorkExperience(initialValues)\r\n    }\r\n\r\n    const handleSaveWithExperience = async () => {\r\n        const body = userData.map(data => ({\r\n            name_inst: data.company,\r\n            address: data.companyAddress,\r\n            rubro_id: parseInt(data.rubro_id),\r\n            job_level_id: parseInt(data.position),\r\n            from_year: data.startDate,\r\n            to_year: data.finishDate,\r\n            buss_travel: 1, // EN DURO\r\n            distan_home: 0, // EN DURO\r\n            hour_rate: parseInt(data.weeklyHours),\r\n            job_sati: parseInt(data.workingRelationship),\r\n            monthly_income: parseInt(data.monthlyIncome),\r\n            over_time: parseInt(data.hasExtraHours),\r\n            work_bal_life: 0, // EN DURO\r\n            job_invol: parseInt(data.commitmentDegree),\r\n            attrition: parseInt(data.withdrawalReason),\r\n        }))\r\n\r\n        handleSaveWorkExperience(body, hasExperience);\r\n    }\r\n\r\n    const handleSaveWithoutExperience = async (data) => {\r\n        handleSaveWorkExperience(data, hasExperience);\r\n    }\r\n\r\n    const handleAddWorkExperience = () => {\r\n        let userDataTemp = [...userData];\r\n        userDataTemp.push(defaultValues);\r\n        handleUpdateWorkExperience(userDataTemp)\r\n    }\r\n\r\n    const handleDeleteWorkExperience = (index) => {\r\n        let userDataTemp = [...userData];\r\n        userDataTemp.splice(index, 1)\r\n        handleUpdateWorkExperience(userDataTemp)\r\n    }\r\n\r\n    const handleUpdateWorkExperienceTemp = (values, index) => {\r\n        let userDataTemp = [...userData];\r\n        userDataTemp[index] = values;\r\n        // const isButtonDisabled = userDataTemp.map(data => (Object.values(data).includes(\"\"))).includes(true)\r\n        // setDisabledButton(isButtonDisabled)\r\n        handleUpdateWorkExperience(userDataTemp)\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{ padding: 20 }}>\r\n            <Grid item xs={12} md={12} className=\"justify-center\">\r\n                <FormControl component=\"fieldset\" error={hasExperience.error}>\r\n                    <RadioGroup row aria-label=\"hasExperience\" name=\"hasExperience\" value={hasExperience.value} onChange={(event) => handleCheckBox(event.target.value)}>\r\n                        <FormControlLabel value=\"withoutExperience\" control={<Radio />} label=\"Sin experiencia\" />\r\n                        <FormControlLabel value=\"withExperience\" control={<Radio />} label=\"Con experiencia\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Grid>\r\n            {hasExperience.value === \"withoutExperience\" &&\r\n                <WithoutExperienceComponent\r\n                    history={history}\r\n                    user={userData}\r\n                    handleFinish={handleSaveWithoutExperience}\r\n                />}\r\n            {hasExperience.value === \"withExperience\" &&\r\n                <WorkExperienceListComponent\r\n                    workExperienceList={userData}\r\n                    handleSaveWithExperience={handleSaveWithExperience}\r\n                    handleAddWorkExperience={handleAddWorkExperience}\r\n                    handleDeleteWorkExperience={handleDeleteWorkExperience}\r\n                    handleUpdateWorkExperience={handleUpdateWorkExperienceTemp}\r\n                // disabledButton={disabledButton}\r\n                />\r\n            }\r\n        </Grid>\r\n    );\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantEducationForm\\index.js",["809","810","811","812","813"],"import React, { useState, useEffect } from 'react';\r\nimport { FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { useForm } from \"../../../hooks\";\r\nimport { Button, TextInput } from '../../../shared/components';\r\nimport { academicLevelsList, specialtiesList } from '../../../../store/services/utils.service';\r\nimport { onlyNumbers } from '../../../shared/libs/validators';\r\nimport ACADEMIC_LEVEL from \"../../../global/constants/types/academicLevels\";\r\nimport SPECIALITY from \"../../../global/constants/types/speciality\";\r\n\r\nconst defaultValues = {\r\n    level_id: \"\",\r\n    name_inst: \"\",\r\n    from_year: \"\",\r\n    endYear: \"\",\r\n    speciality_id: null,\r\n    otherSpeciality: null\r\n}\r\n\r\nexport default function ApplicantEducationForm({ user, handleSaveEducation }) {\r\n    let initialValues = user ? user : defaultValues;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('level_id' in fieldValues)\r\n            temp.level_id = fieldValues.level_id ? \"\" : \"El campo es requerido.\"\r\n        if ('name_inst' in fieldValues)\r\n            temp.name_inst = fieldValues.name_inst ? \"\" : \"El campo es requerido.\"\r\n        if ('from_year' in fieldValues)\r\n            temp.from_year = fieldValues.from_year ? (fieldValues.from_year.length === 4 ? \"\" : \"Ejemplo: 1990\") : \"El campo es requerido. Ejemplo: 1990\"\r\n        if ('endYear' in fieldValues)\r\n            temp.endYear = fieldValues.endYear ? (fieldValues.endYear.length === 4 ? \"\" : \"Ejemplo: 1990\") : \"El campo es requerido.  Ejemplo: 1990\"\r\n        if (showSpeciality) {\r\n            if ('speciality' in fieldValues) {\r\n                temp.speciality_id = fieldValues.speciality_id ? \"\" : \"El campo es requerido\"\r\n            }\r\n        }\r\n        if (showOtherSpeciality) {\r\n            if ('speciality' in fieldValues) {\r\n                temp.otherSpeciality = fieldValues.otherSpeciality ? \"\" : \"El campo es requerido\"\r\n            }\r\n        }\r\n\r\n\r\n        setErrors({ ...temp })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const [showSpeciality, setShowSpeciality] = useState(false)\r\n    const [showOtherSpeciality, setShowOtherSpeciality] = useState(false)\r\n    const [academicLevels, setAcademicLevels] = useState([]);\r\n    const [specialties, setSpecialties] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAcademicLevels();\r\n        getSpecialties();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const value = values.level_id\r\n        if (value === ACADEMIC_LEVEL.INCOMPLETE_TECHNICIAN_ID || value === ACADEMIC_LEVEL.COMPLETE_TECHNICIAN_ID ||\r\n            value === ACADEMIC_LEVEL.INCOMPLETE_UNIVERSITY_ID || value === ACADEMIC_LEVEL.COMPLETE_UNIVERSITY_ID) {\r\n            setValues({ ...values, speciality_id: \"\" })\r\n            setShowSpeciality(true)\r\n        } else {\r\n            setValues({ ...values, speciality_id: null })\r\n            setShowSpeciality(false)\r\n        }\r\n    }, [values.level_id])\r\n\r\n    useEffect(() => {\r\n        const value = values.speciality_id\r\n        if (value == SPECIALITY.OTHERS) { //otros = 28\r\n            setShowOtherSpeciality(true)\r\n            setValues({ ...values, otherSpeciality: \"\" })\r\n        } else {\r\n            setShowOtherSpeciality(false)\r\n            setErrors({ ...errors, otherSpeciality: \"\" })\r\n            setValues({ ...values, otherSpeciality: null })\r\n        }\r\n    }, [values.speciality_id])\r\n\r\n    const getAcademicLevels = async () => {\r\n        const response = await academicLevelsList();\r\n        setAcademicLevels(response?.levels);\r\n    }\r\n\r\n    const getSpecialties = async () => {\r\n        const response = await specialtiesList();\r\n        setSpecialties(response?.fields);\r\n    }\r\n\r\n    const handleClickSave = () => {\r\n        if (!disabledButtonState) {\r\n            handleSaveEducation(values)\r\n        } else {\r\n            validate(values);\r\n            return\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{ padding: 20 }}>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.level_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Nivel máximo alcanzado</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"level_id\"\r\n                        value={values.level_id}\r\n                        onChange={handleInputChange}\r\n                        label=\"Nivel máximo alcanzado\"\r\n                    >\r\n                        {\r\n                            academicLevels.map(element =>\r\n                                <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                            )\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>{errors.level_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Institución educativa\"\r\n                    name=\"name_inst\"\r\n                    value={values.name_inst}\r\n                    onChange={handleInputChange}\r\n                    error={errors.name_inst ? true : false}\r\n                    helperText={errors.name_inst}\r\n                />\r\n            </Grid>\r\n            {\r\n                showSpeciality &&\r\n                <Grid item xs={12} md={6}>\r\n                    <FormControl variant=\"outlined\" fullWidth error={errors.speciality ? true : false}>\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">Especialidad</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            name='speciality_id'\r\n                            value={values.speciality_id || ''}\r\n                            onChange={handleInputChange}\r\n                            label=\"Especialidad\"\r\n                        >\r\n                            {specialties.sort((a, b) => a.id - b.id).map(element =>\r\n                                <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                        <FormHelperText>{errors.speciality_id}</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n            }\r\n            {\r\n                showOtherSpeciality &&\r\n                <Grid item xs={12} md={6}>\r\n                    <TextInput\r\n                        fullWidth\r\n                        label=\"Especifique especialidad\"\r\n                        name=\"otherSpeciality\"\r\n                        value={values.otherSpeciality}\r\n                        onChange={handleInputChange}\r\n                        helperText={errors.otherSpeciality}\r\n                        error={errors.otherSpeciality ? true : false}\r\n                    />\r\n                </Grid>\r\n            }\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    label=\"Año de inicio\"\r\n                    name=\"from_year\"\r\n                    value={values.from_year}\r\n                    onChange={handleInputChange}\r\n                    helperText={errors.from_year}\r\n                    error={errors.from_year ? true : false}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    label=\"Año de fin\"\r\n                    name=\"endYear\"\r\n                    value={values.endYear}\r\n                    onChange={handleInputChange}\r\n                    helperText={errors.endYear}\r\n                    error={errors.endYear ? true : false}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} className=\"justify-end\">\r\n                <Button color=\"primary\" type=\"submit\" onClick={handleClickSave}>continuar</Button>\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantContactInformationForm\\index.js",["814","815","816","817","818","819"],"import React, { useState, useEffect } from 'react';\r\nimport { FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, } from '@material-ui/core';\r\nimport { Button, TextInput } from '../../../shared/components';\r\nimport { civilStatusesList, departmentsList, districtsList, provincesList } from '../../../../store/services/utils.service';\r\nimport { onlyNumbers, isPhone } from '../../../shared/libs/validators';\r\nimport { useForm } from \"../../../hooks/useForm\";\r\n\r\nconst defaultValues = {\r\n    department_id: \"\",\r\n    province_id: \"\",\r\n    district_id: \"\",\r\n    address: \"\",\r\n    reference: \"\",\r\n    phone: \"\",\r\n    civil_id: \"\",\r\n}\r\n\r\nexport default function ApplicantPersonalDataForm({ user, handleSaveContactInformation }) {\r\n    // #region \r\n    let initialValues = user ? user : defaultValues;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('department_id' in fieldValues)\r\n            temp.department_id = fieldValues.department_id ? \"\" : \"El campo es requerido.\"\r\n        if ('province_id' in fieldValues)\r\n            temp.province_id = fieldValues.province_id ? \"\" : \"El campo es requerido.\"\r\n        if ('district_id' in fieldValues)\r\n            temp.district_id = fieldValues.district_id ? \"\" : \"El campo es requerido.\"\r\n        if ('address' in fieldValues)\r\n            temp.address = fieldValues.address ? \"\" : \"El campo es requerido.\"\r\n        if ('reference' in fieldValues)\r\n            temp.reference = fieldValues.reference ? \"\" : \"El campo es requerido.\"\r\n        if ('phone' in fieldValues)\r\n            temp.phone = fieldValues.phone ? (isPhone(fieldValues.phone) ? \"\" : \"Ingrese un numero de teléfono/celular válido\") : \"El campo es requerido.\"\r\n        if ('civil_id' in fieldValues)\r\n            temp.civil_id = fieldValues.civil_id ? \"\" : \"El campo es requerido.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const [civilStatuses, setCivilStatuses] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [baseProvinces, setBaseProvinces] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [baseDistricts, setBaseDistricts] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCivilStatuses();\r\n        getDepartmentsList();\r\n        getProvincesList();\r\n        getDistrictsList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getFilteredProvinces(values.department_id);\r\n    }, [baseProvinces])\r\n\r\n    useEffect(() => {\r\n        getFilteredDistricts(values.province_id);\r\n    }, [baseDistricts])\r\n\r\n    const handleChangeSelectDepartment = (e) => {\r\n        setValues({ ...values, district_id: \"\", province_id: \"\" })\r\n        handleInputChange(e)\r\n        getFilteredProvinces(e.target.value);\r\n    }\r\n\r\n    const handleChangeSelectProvince = (e) => {\r\n        setValues({ ...values, district_id: \"\" })\r\n        handleInputChange(e)\r\n        getFilteredDistricts(e.target.value);\r\n    }\r\n\r\n    const getCivilStatuses = async () => {\r\n        const response = await civilStatusesList();\r\n        setCivilStatuses(response?.civils);\r\n    }\r\n\r\n    const getDepartmentsList = async () => {\r\n        const response = await departmentsList();\r\n        setDepartments(response?.departments);\r\n    }\r\n\r\n    const getProvincesList = async () => {\r\n        const response = await provincesList();\r\n        setBaseProvinces(response?.provinces);\r\n    }\r\n\r\n    const getDistrictsList = async () => {\r\n        const response = await districtsList();\r\n        setBaseDistricts(response?.districts);\r\n    }\r\n\r\n    const getFilteredProvinces = (value) => {\r\n        setProvinces([]);\r\n        setDistricts([]);\r\n\r\n        let filteredProvinces = baseProvinces.filter(item => item.department_id == value);\r\n        setProvinces(filteredProvinces);\r\n    }\r\n\r\n    const getFilteredDistricts = function (value) {\r\n        setDistricts([]);\r\n        let filteredDistricts = baseDistricts.filter(item => item.province_id == value);\r\n        setDistricts(filteredDistricts);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (!disabledButtonState) {\r\n            let data = { ...values, country_id: 1 } //Country_id en DURO\r\n            handleSaveContactInformation(data)\r\n        } else {\r\n            validate(values);\r\n            return\r\n        }\r\n\r\n    }\r\n    // #endregion\r\n    return (\r\n        <Grid container spacing={3} style={{ padding: 20 }}>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.department_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Departamento</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"department_id\"\r\n                        value={values.department_id}\r\n                        onChange={(e) => handleChangeSelectDepartment(e)}\r\n                        label=\"Departamento\"\r\n                    >\r\n                        {departments.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.department_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.province_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Provincia</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"province_id\"\r\n                        value={values.province_id}\r\n                        onChange={(e) => handleChangeSelectProvince(e)}\r\n                        label=\"Provincia\"\r\n                        disabled={!values.department_id}\r\n                    >\r\n                        {provinces.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.province_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.district_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Distrito</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"district_id\"\r\n                        value={values.district_id}\r\n                        onChange={handleInputChange}\r\n                        label=\"Distrito\"\r\n                        disabled={!values.province_id}\r\n                    >\r\n                        {districts.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.district_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Dirección\"\r\n                    name=\"address\"\r\n                    value={values.address}\r\n                    onChange={handleInputChange}\r\n                    error={errors.address ? true : false}\r\n                    helperText={errors.address}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"reference\"\r\n                    label=\"Referencia\"\r\n                    value={values.reference}\r\n                    onChange={handleInputChange}\r\n                    error={errors.reference ? true : false}\r\n                    helperText={errors.reference}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Celular/Teléfono\"\r\n                    name=\"phone\"\r\n                    value={values.phone}\r\n                    onChange={handleInputChange}\r\n                    error={errors.phone ? true : false}\r\n                    helperText={errors.phone}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.civil_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Estado civil</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"civil_id\"\r\n                        value={values.civil_id}\r\n                        onChange={handleInputChange}\r\n                        label=\"Estado civil\"\r\n                    >\r\n                        {civilStatuses.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.civil_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} className=\"justify-end\">\r\n                <Button color=\"primary\" onClick={handleSave} >continuar</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantPersonalDataForm\\index.js",["820","821","822","823"],"import React, { useState, useEffect } from 'react';\r\nimport { DateTime } from \"luxon\";\r\nimport { Divider, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select } from '@material-ui/core';\r\n\r\nimport { Button, TextInput } from '../../../shared/components';\r\nimport { documentsTypeList, providerList } from '../../../../store/services/utils.service';\r\nimport { onlyNumbers, onlyLetters, isRuc, isDni } from '../../../shared/libs/validators';\r\nimport { useForm } from \"../../../hooks/useForm\";\r\nimport PROVIDERS from \"../../../global/constants/types/providers\";\r\nimport DOCUMENT_TYPE from \"../../../global/constants/types/documentsTypes\";\r\n\r\nconst defaultValues = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    type_doc: \"\",\r\n    document_number: \"\",\r\n    birth_date: \"\",\r\n    gender: \"\",\r\n    provider_id: \"\",\r\n    providerSpecification: null,\r\n}\r\n\r\nexport default function ApplicantContactInformationForm({ user, handleSavePersonalData }) {\r\n    // #region \r\n    let initialValues = user ? user : defaultValues;\r\n    const dateLocal = DateTime.local().toFormat(\"yyyy-LL-dd\")\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('birth_date' in fieldValues)\r\n            temp.birth_date = fieldValues.birth_date ? \"\" : \"El campo es requerido.\"\r\n        if ('first_name' in fieldValues)\r\n            temp.first_name = fieldValues.first_name ? \"\" : \"El campo es requerido.\"\r\n        if ('gender' in fieldValues)\r\n            temp.gender = fieldValues.gender ? \"\" : \"El campo es requerido.\"\r\n        if ('last_name' in fieldValues)\r\n            temp.last_name = fieldValues.last_name ? \"\" : \"El campo es requerido.\"\r\n        if ('type_doc' in fieldValues)\r\n            temp.type_doc = fieldValues.type_doc ? \"\" : \"El campo es requerido.\"\r\n        if ('document_number' in fieldValues) {\r\n            if (values.type_doc === 1) {\r\n                temp.document_number = fieldValues.document_number ? (isDni(fieldValues.document_number) ? \"\" : \"Numero de DNI inválido\") : \"El campo es requerido.\"\r\n            } else {\r\n                temp.document_number = fieldValues.document_number ? \"\" : \"El campo es requerido.\"\r\n            }\r\n        }\r\n        if ('provider_id' in fieldValues)\r\n            temp.provider_id = fieldValues.provider_id ? \"\" : \"El campo es requerido.\"\r\n\r\n        if (showProviderSpecification) {\r\n            if ('providerSpecification' in fieldValues)\r\n                temp.providerSpecification = fieldValues.providerSpecification ? \"\" : \"El campo es requerido.\"\r\n        }\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const [providers, setProviders] = useState([]);\r\n    const [documentsType, setDocumentsType] = useState([]);\r\n    const [showProviderSpecification, setShowProviderSpecification] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getProviderList();\r\n        getDocumentsTypeList();\r\n    }, []);\r\n\r\n    const getProviderList = async () => {\r\n        const response = await providerList();\r\n        setProviders(response?.providers);\r\n    }\r\n\r\n    const getDocumentsTypeList = async () => {\r\n        const response = await documentsTypeList();\r\n        let documentTypeTemp = response?.documents.filter(documentType => documentType.id != DOCUMENT_TYPE.RUC_ID)\r\n        setDocumentsType(documentTypeTemp);\r\n    }\r\n\r\n    function handleSelectTypeDocument(e) {\r\n        setValues(prevValues => ({\r\n            ...prevValues,\r\n            document_number: \"\"\r\n        }))\r\n        handleInputChange(e);\r\n    }\r\n\r\n    const handleSelectProvider = (e) => {\r\n        const option = e.target.value;\r\n        if (option === PROVIDERS.OTHER || option === PROVIDERS.MUNICIPALITY_ID) {//otros y municipalidad\r\n            setShowProviderSpecification(true)\r\n            setValues({ ...values, providerSpecification: '' })\r\n        } else {\r\n            setShowProviderSpecification(false)\r\n            setValues({ ...values, providerSpecification: null })\r\n            setErrors({ ...errors, providerSpecification: '' })\r\n        }\r\n        handleInputChange(e);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (!disabledButtonState) {\r\n            handleSavePersonalData(values)\r\n        } else {\r\n            validate(values);\r\n            return\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n    return (\r\n        <Grid container spacing={3} style={{ padding: 20 }}>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Nombres\"\r\n                    name=\"first_name\"\r\n                    value={values.first_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.first_name ? true : false}\r\n                    helperText={errors.first_name}\r\n                    onKeyPress={e => onlyLetters(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Apellidos\"\r\n                    name=\"last_name\"\r\n                    value={values.last_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.last_name ? true : false}\r\n                    helperText={errors.last_name}\r\n                    onKeyPress={e => onlyLetters(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.type_doc ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Tipo de documento</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"type_doc\"\r\n                        value={values.type_doc}\r\n                        onChange={(e) => handleSelectTypeDocument(e)}\r\n                        label=\"Tipo de documento\"\r\n                    >\r\n                        {documentsType.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.type_doc}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Número de documento\"\r\n                    name=\"document_number\"\r\n                    value={values.document_number}\r\n                    onChange={handleInputChange}\r\n                    error={errors.document_number ? true : false}\r\n                    // maxLength='12'\r\n                    // minLength='8'\r\n                    // type=\"Number\"\r\n                    helperText={errors.document_number}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    id=\"date\"\r\n                    fullWidth\r\n                    type=\"date\"\r\n                    name=\"birth_date\"\r\n                    label=\"Fecha de nacimiento\"\r\n                    value={values.birth_date}\r\n                    onChange={handleInputChange}\r\n                    error={errors.birth_date ? true : false}\r\n                    helperText={errors.birth_date}\r\n                    // max={moment().toDate()}\r\n                    // defaultValue={birthdate.value}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        max: dateLocal\r\n                    }}\r\n                />\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.gender ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Género</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        label=\"Género\"\r\n                    >\r\n                        <MenuItem value={2}>Femenino</MenuItem>\r\n                        <MenuItem value={1}>Masculino</MenuItem>\r\n                        <MenuItem value={3}>Otro</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText>{errors.gender}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <Divider />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.provider_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">¿Cómo te enteraste de Operativa?</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"provider_id\"\r\n                        value={values.provider_id}\r\n                        onChange={(e) => handleSelectProvider(e)}\r\n                        label=\"¿Cómo te enteraste de Operativa?\"\r\n                    >\r\n                        {providers.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.provider_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            {\r\n                showProviderSpecification &&\r\n                <Grid item xs={12} md={6}>\r\n                    <TextInput\r\n                        fullWidth\r\n                        label=\"Por favor, especifíque\"\r\n                        name=\"providerSpecification\"\r\n                        value={values.providerSpecification || ''}\r\n                        onChange={handleInputChange}\r\n                        error={errors.providerSpecification ? true : false}\r\n                        helperText={errors.providerSpecification}\r\n                    />\r\n                </Grid>\r\n            }\r\n            <Grid item xs={12} md={12} className=\"justify-end\">\r\n                <Button color=\"primary\" onClick={handleSave}>continuar</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\CompanyForm\\index.js",["824","825","826","827"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RepresentativeForm\\index.js",["828","829","830","831","832","833","834","835","836","837","838"],"import React, { useState, useEffect } from 'react'\r\nimport { Divider, FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport { Button, TextInput } from '../../../shared/components';\r\nimport { useForm } from \"../../../hooks\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { isEmailCorporate } from '../../../shared/libs/validators';\r\n\r\nconst initialValues = {\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    cargo_input: '',\r\n    area_input: '',\r\n}\r\n\r\nexport default function Index({ goNextForm }) {\r\n\r\n    const history = useHistory();\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('first_name' in fieldValues)\r\n            temp.first_name = fieldValues.first_name ? \"\" : \"El campo es requerido.\"\r\n        if ('last_name' in fieldValues)\r\n            temp.last_name = fieldValues.last_name ? \"\" : \"El campo es requerido.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = fieldValues.email ? (isEmailCorporate(fieldValues.email) ? \"\" : \"Ingrese su correo corporativo\") : \"El campo es requerido.\"\r\n        if ('cargo_input' in fieldValues)\r\n            temp.cargo_input = fieldValues.cargo_input ? \"\" : \"El campo es requerido.\"\r\n        if ('area_input' in fieldValues)\r\n            temp.area_input = fieldValues.area_input ? \"\" : \"El campo es requerido.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n\r\n    const handleClickButtonNext = () => {\r\n        if (!disabledButtonState) {\r\n            goNextForm(values);\r\n        } else {\r\n            validate()\r\n            return\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <Typography variant=\"h6\" component=\"h6\">\r\n                    DATOS DEL REPRESENTANTE\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"first_name\"\r\n                    label=\"Nombre\"\r\n                    value={values.first_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.first_name ? true : false}\r\n                    helperText={errors.first_name}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"last_name\"\r\n                    label=\"Apellidos\"\r\n                    value={values.last_name}\r\n                    onChange={handleInputChange}\r\n                    error={errors.last_name ? true : false}\r\n                    helperText={errors.last_name}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"email\"\r\n                    label=\"Correo Electronico\"\r\n                    value={values.email}\r\n                    onChange={handleInputChange}\r\n                    error={errors.email ? true : false}\r\n                    helperText={errors.email}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"cargo_input\"\r\n                    label=\"Cargo\"\r\n                    value={values.cargo_input}\r\n                    onChange={handleInputChange}\r\n                    error={errors.cargo_input ? true : false}\r\n                    helperText={errors.cargo_input}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} justify=\"center\">\r\n                <TextInput\r\n                    fullWidth\r\n                    name=\"area_input\"\r\n                    label=\"Area\"\r\n                    value={values.area_input}\r\n                    onChange={handleInputChange}\r\n                    error={errors.area_input ? true : false}\r\n                    helperText={errors.area_input}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button variant=\"outlined\" size=\"large\" onClick={() => history.goBack()}>regresar</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" size=\"large\" onClick={handleClickButtonNext} disabled={disabledButtonState}>Siguiente</Button>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\RegistrationCompleted\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\TermsAndConditionModal\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\TermsAndConditionModalEnterprise\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\validations\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WithExperienceComponent.js",["839","840","841","842","843"],"import React, { useState, useEffect } from 'react';\r\nimport { Divider, FormControl, FormControlLabel, FormHelperText, FormLabel, Grid, InputLabel, MenuItem, RadioGroup, Select, Typography } from '@material-ui/core';\r\nimport { Button, Checkbox, Radio, TextInput, Modal } from '../../../shared/components';\r\nimport { areasList, itemsList, jobLevelsList, withdrawalReasonsList } from '../../../../store/services/utils.service';\r\nimport { onlyNumbers, onlyLetters } from '../../../shared/libs/validators';\r\nimport { useForm } from \"../../../hooks/useForm\";\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst defaultValues = {\r\n    position: \"\",\r\n    company: \"\",\r\n    companyAddress: \"\",\r\n    rubro_id: \"\",\r\n    startDate: \"\",\r\n    finishDate: \"\",\r\n    weeklyHours: \"\",\r\n    monthlyIncome: \"\",\r\n    hasExtraHours: \"\",\r\n    commitmentDegree: \"\",\r\n    workingRelationship: \"\",\r\n    withdrawalReason: \"\",\r\n\r\n}\r\n\r\nexport default function WithExperienceComponent({ handleDeleteWorkExperience, handleUpdateWorkExperience, handleAddWorkExperience, handleSaveWithExperience, index, length, user }) {\r\n    let initialValues = user ? user : defaultValues;\r\n    const dateLocal = DateTime.local().toFormat(\"yyyy-LL\") //Don't use momentjs, will soon be deprecated\r\n    const [showCheckBox] = useState(index >= 1)\r\n    const [isHidden, setIsHidden] = useState(false) //Si la lista tiene mas de 1 elemento\r\n    const [openConfirmationModal, setOpenConfirmationModal] = useState(false)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n\r\n        if ('position' in fieldValues)\r\n            temp.position = fieldValues.position ? \"\" : \"El campo es requerido.\"\r\n        if ('company' in fieldValues)\r\n            temp.company = fieldValues.company ? \"\" : \"El campo es requerido.\"\r\n        if ('companyAddress' in fieldValues)\r\n            temp.companyAddress = fieldValues.companyAddress ? \"\" : \"El campo es requerido.\"\r\n        if ('rubro_id' in fieldValues)\r\n            temp.rubro_id = fieldValues.rubro_id ? \"\" : \"El campo es requerido.\"\r\n        if ('startDate' in fieldValues)\r\n            temp.startDate = fieldValues.startDate ? \"\" : \"El campo es requerido.\"\r\n        if ('weeklyHours' in fieldValues)\r\n            temp.weeklyHours = fieldValues.weeklyHours ? \"\" : \"El campo es requerido.\"\r\n        if ('monthlyIncome' in fieldValues)\r\n            temp.monthlyIncome = fieldValues.monthlyIncome ? \"\" : \"El campo es requerido.\"\r\n        if ('hasExtraHours' in fieldValues)\r\n            temp.hasExtraHours = fieldValues.hasExtraHours ? \"\" : \"El campo es requerido.\"\r\n        if ('commitmentDegree' in fieldValues)\r\n            temp.commitmentDegree = fieldValues.commitmentDegree ? \"\" : \"El campo es requerido.\"\r\n        if ('workingRelationship' in fieldValues)\r\n            temp.workingRelationship = fieldValues.workingRelationship ? \"\" : \"El campo es requerido.\"\r\n        if (!hasWork) {\r\n            if ('finishDate' in fieldValues)\r\n                temp.finishDate = fieldValues.finishDate ? \"\" : \"El campo es requerido.\"\r\n            if ('withdrawalReason' in fieldValues)\r\n                temp.withdrawalReason = fieldValues.withdrawalReason ? \"\" : \"El campo es requerido.\"\r\n        }\r\n\r\n        setErrors({ ...temp })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        disabledButtonState,\r\n    } = useForm(initialValues, true, validate);\r\n\r\n    const [rubros, setRubros] = useState([]);\r\n    const [jobLevels, setJobLevels] = useState([]);\r\n    const [withdrawalReasons, setWithdrawalReasons] = useState([]);\r\n    const [hasWork, setHasWork] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getRubros();\r\n        getJobLevels();\r\n        getWithdrawalReasons();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        handleUpdateWorkExperience(values, index)\r\n    }, [values, index]);\r\n\r\n    const getRubros = async () => {\r\n        const response = await itemsList();\r\n        setRubros(response?.rubros);\r\n    }\r\n\r\n    const getJobLevels = async () => {\r\n        const response = await jobLevelsList();\r\n        setJobLevels(response?.job_levels);\r\n    }\r\n\r\n    const getWithdrawalReasons = async () => {\r\n        const response = await withdrawalReasonsList();\r\n        setWithdrawalReasons(response?.attritions);\r\n    }\r\n\r\n    const handleChangeCheckbox = (e) => {\r\n        setHasWork(prevState => !prevState)\r\n        setErrors({})\r\n        if (e.target.checked) {\r\n            setValues({ ...values, finishDate: null, withdrawalReason: null })\r\n        } else {\r\n            setValues({ ...values, finishDate: \"\", withdrawalReason: \"\" })\r\n        }\r\n    }\r\n\r\n    const handleClickAddExperience = () => {\r\n        if (!disabledButtonState) {\r\n            handleAddWorkExperience()\r\n        } else {\r\n            validate();\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleClickNextStep = () => {\r\n        if (!disabledButtonState) {\r\n            handleSaveWithExperience()\r\n        } else {\r\n            validate();\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleClickDeleteExperience = () => {\r\n        handleDeleteWorkExperience(index)\r\n        setOpenConfirmationModal(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!showCheckBox &&\r\n                <Grid item xs={12} md={12} className=\"justify-center\">\r\n                    <FormControl variant=\"outlined\">\r\n                        <Checkbox\r\n                            label={\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    Actualmente estoy laborando.\r\n                                </Typography>\r\n                            }\r\n                            name=\"hasWork\"\r\n                            checked={hasWork}\r\n                            onChange={(e) => handleChangeCheckbox(e)}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n            }\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.position ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Cargo</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"position\"\r\n                        value={values.position}\r\n                        onChange={handleInputChange}\r\n                        label=\"Cargo\"\r\n                    >\r\n                        {jobLevels.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.position}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Empresa\"\r\n                    name=\"company\"\r\n                    value={values.company}\r\n                    onChange={handleInputChange}\r\n                    error={errors.company && true}\r\n                    helperText={errors.company}\r\n                    onKeyPress={e => onlyLetters(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Dirección de la empresa\"\r\n                    name=\"companyAddress\"\r\n                    value={values.companyAddress}\r\n                    onChange={handleInputChange}\r\n                    error={errors.companyAddress && true}\r\n                    helperText={errors.companyAddress}\r\n                    onKeyPress={e => onlyLetters(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.rubro_id ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Rubro</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"rubro_id\"\r\n                        value={values.rubro_id}\r\n                        onChange={handleInputChange}\r\n                        label=\"Rubro\"\r\n                    >\r\n                        {rubros && rubros.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                        {/* <MenuItem value=\"other\">Otro</MenuItem> */}\r\n                    </Select>\r\n                    <FormHelperText>{errors.rubro_id}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    id=\"date\"\r\n                    fullWidth\r\n                    name=\"startDate\"\r\n                    label=\"Fecha de inicio\"\r\n                    value={values.startDate}\r\n                    onChange={handleInputChange}\r\n                    error={errors.startDate && true}\r\n                    helperText={errors.startDate}\r\n                    type=\"month\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        max: dateLocal\r\n                    }}\r\n                />\r\n            </Grid>\r\n            {!hasWork && <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    id=\"date\"\r\n                    fullWidth\r\n                    type=\"month\"\r\n                    name=\"finishDate\"\r\n                    label=\"Fecha de fin\"\r\n                    value={values.finishDate || ''}\r\n                    onChange={handleInputChange}\r\n                    error={errors.finishDate && true}\r\n                    helperText={errors.finishDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        max: dateLocal\r\n                    }}\r\n                />\r\n            </Grid>}\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Promedio de horas semanales\"\r\n                    name=\"weeklyHours\"\r\n                    value={values.weeklyHours}\r\n                    onChange={handleInputChange}\r\n                    error={errors.weeklyHours && true}\r\n                    helperText={errors.weeklyHours}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                    type=\"Number\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    type=\"Number\"\r\n                    label=\"Ingreso Mensual\"\r\n                    name=\"monthlyIncome\"\r\n                    value={values.monthlyIncome}\r\n                    onChange={handleInputChange}\r\n                    error={errors.monthlyIncome}\r\n                    helperText={errors.monthlyIncome}\r\n                    onKeyPress={e => onlyNumbers(e)}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={errors.hasExtraHours ? true : false}>\r\n                    <FormLabel component=\"legend\">¿Trabajaste horas extras?</FormLabel>\r\n                    <RadioGroup row aria-label=\"hasExtraHours\" name=\"hasExtraHours\" value={values.hasExtraHours} onChange={handleInputChange}>\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"Sí\" />\r\n                        <FormControlLabel value=\"0\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                    <FormHelperText>{errors.hasExtraHours}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={errors.commitmentDegree ? true : false}>\r\n                    <FormLabel component=\"legend\">¿Cómo calificaría su grado de compromiso con la empresa?</FormLabel>\r\n                    <FormHelperText>Marque un número del 1 al 5 siendo 1 totalmente descomprometido y 5 totalmente comprometido</FormHelperText>\r\n                    <RadioGroup row aria-label=\"commitmentDegree\" name=\"commitmentDegree\" value={values.commitmentDegree} onChange={handleInputChange}>\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\r\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\r\n                        <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\r\n                    </RadioGroup>\r\n                    <FormHelperText>{errors.commitmentDegree}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={errors.workingRelationship ? true : false}>\r\n                    <FormLabel component=\"legend\">¿Qué tan satisfecho se siente/sintió con la relación entre el trabajo y su vida personal?</FormLabel>\r\n                    <FormHelperText>Marque un número del 1 al 5 siendo 1 totalmente insatisfecho y 5 totalmente satisfecho</FormHelperText>\r\n                    <RadioGroup row aria-label=\"workingRelationship\" name=\"workingRelationship\" value={values.workingRelationship} onChange={handleInputChange}>\r\n                        <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                        <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\r\n                        <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n                        <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\r\n                        <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\r\n                    </RadioGroup>\r\n                    <FormHelperText>{errors.workingRelationship}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            {!hasWork && <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={errors.withdrawalReason ? true : false}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Motivo de retiro</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        name=\"withdrawalReason\"\r\n                        value={values.withdrawalReason || ''}\r\n                        onChange={handleInputChange}\r\n                        label=\"Motivo de retiro\"\r\n                    >\r\n                        {withdrawalReasons.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                    <FormHelperText>{errors.withdrawalReason}</FormHelperText>\r\n                </FormControl>\r\n            </Grid>}\r\n\r\n            {\r\n                //Condiciones para mostrar:\r\n                //1 se debe mostrar en la ultima expriencia (al final de la lista)\r\n                //2 solo debe permitirse agregar 3 experiencias como maximo\r\n                (index == length - 1 && index < 2) &&\r\n                <>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Button color=\"primary\" onClick={handleClickAddExperience} > Agregar otra experiencia</Button>\r\n                    </Grid>\r\n                </>\r\n            }\r\n            {\r\n                (isHidden || index > 0 || length > 1) && //Si existe mas de 1 experiencia guardada(array), mostrar en todos el boton, exepto al final\r\n                <>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Button color=\"primary\" onClick={() => setOpenConfirmationModal(true)}>eliminar experiencia</Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Divider />\r\n                    </Grid>\r\n                </>\r\n\r\n            }\r\n            {\r\n                !isHidden && index == length - 1 &&\r\n                <Grid item xs={12} md={12} className=\"justify-end\">\r\n                    <Button color=\"primary\" type=\"submit\" onClick={handleClickNextStep}>continuar</Button>\r\n                </Grid>\r\n            }\r\n\r\n            <Modal open={openConfirmationModal} handleCloseModal={() => setOpenConfirmationModal(false)}>\r\n                <h3 id=\"simple-modal-title\">¿Está seguro que desa eliminar su experiencia laboral?</h3>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={3} className=\"justify-center\">\r\n                        <Grid item>\r\n                            <Button variant=\"outlined\" size=\"large\" onClick={() => { setOpenConfirmationModal(false); return }}>CANCELAR</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button variant=\"contained\" size=\"large\" onClick={handleClickDeleteExperience}>ELIMINAR</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Modal>\r\n            {/* <Grid item xs={12} md={12} lg={12}>\r\n                <Divider />\r\n            </Grid>\r\n            {\r\n                showButtons &&\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Button color=\"primary\" onClick={() => handleDeleteWorkExperience(index)}>eliminar experiencia</Button>\r\n                </Grid>\r\n            } */}\r\n        </>\r\n    )\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WorkExperienceListComponent.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\auth\\components\\ApplicantWorkExperienceForm\\WithoutExperienceComponent.js",["844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Divider, FormControl, FormControlLabel, FormHelperText, FormLabel, Grid, InputLabel, MenuItem, RadioGroup, Select, Typography } from '@material-ui/core';\r\n\r\nimport { Button, Radio, TextInput } from '../../../shared/components';\r\nimport { areasList, specialtiesList } from '../../../../store/services/utils.service';\r\nimport { onlyLetters } from '../../../shared/libs/validators';\r\n\r\nexport default function WithoutExperienceComponent({ user, handleFinish, history }) {\r\n    const userData = user;\r\n    const [area, setArea] = useState({ value: '', error: false });\r\n    const [specificArea, setSpecificArea] = useState({ value: '', error: false });\r\n    const [hasVolunteering, setHasVolunteering] = useState({ value: '', error: false });\r\n    const [hasRotativeSchedules, setHasRotativeSchedules] = useState({ value: '', error: false });\r\n    const [hasExtraHours, setHasExtraHours] = useState({ value: '', error: false });\r\n    const [hasWeekend, setHasWeekend] = useState({ value: '', error: false });\r\n\r\n    const [areas, setAreas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // setArea({ ...area, value: userData?.interest_area_id ? userData?.interest_area_id : '' });\r\n        // setSpecificArea({ ...hasRotativeSchedules, value: userData?.field_id ? userData?.field_id : '' });\r\n        // setHasVolunteering({ ...hasVolunteering, value: userData?.level_id ? userData?.level_id : '' });\r\n        setHasVolunteering({ ...hasVolunteering, value: userData?.volunteering === 0 ? 'no' : (userData?.volunteering === 1 ? 'yes' : '') });\r\n        setHasRotativeSchedules({ ...hasRotativeSchedules, value: userData?.rotating_schedule === 0 ? 'no' : (userData?.rotating_schedule === 1 ? 'yes' : '') });\r\n        setHasExtraHours({ ...hasExtraHours, value: userData?.extra_hours === 0 ? 'no' : (userData?.extra_hours === 1 ? 'yes' : '') });\r\n        setHasWeekend({ ...hasWeekend, value: userData?.work_weekend === 0 ? 'no' : (userData?.work_weekend === 1 ? 'yes' : '') });\r\n    }, [user])\r\n\r\n    // useEffect(() => {\r\n    //     getAreas();\r\n    // }, []);\r\n\r\n    // const getAreas = async () => {\r\n    //     const response = await areasList();\r\n    //     setAreas(response?.areas);\r\n    // }\r\n\r\n    const handleSave = () => {\r\n        const body = {\r\n            volunteering: parseInt(hasVolunteering.value === \"yes\" ? 1 : 0),\r\n            rotating_schedule: parseInt(hasRotativeSchedules.value === \"yes\" ? 1 : 0),\r\n            extra_hours: parseInt(hasExtraHours.value === \"yes\" ? 1 : 0),\r\n            work_weekend: parseInt(hasWeekend.value === \"yes\" ? 1 : 0),\r\n        };\r\n        if (!isButtonDisabled()) {\r\n            handleFinish(body)\r\n        }\r\n    }\r\n\r\n    const validateArea = (value = area.value) => setArea({ value: value, error: !value });\r\n    const validateSpecificArea = (value = specificArea.value) => setSpecificArea({ value: value, error: !value });\r\n    const validateHasVolunteering = (value = hasVolunteering.value) => setHasVolunteering({ value: value, error: !value });\r\n    const validateHasRotativeSchedules = (value = hasRotativeSchedules.value) => setHasRotativeSchedules({ value: value, error: !value });\r\n    const validateHasExtraHours = (value = hasExtraHours.value) => setHasExtraHours({ value: value, error: !value });\r\n    const validateHasWeekend = (value = hasWeekend.value) => setHasWeekend({ value: value, error: !value });\r\n\r\n    const isButtonDisabled = () => {\r\n        // return !area.value || (area.value === 'other' && !specificArea.value) || !hasVolunteering.value || !hasRotativeSchedules.value || !hasExtraHours.value || !hasWeekend.value\r\n        return !hasVolunteering.value || !hasRotativeSchedules.value || !hasExtraHours.value || !hasWeekend.value\r\n    }\r\n\r\n    const handleClickNextStep = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* <Grid item xs={12} md={6}>\r\n                <FormControl variant=\"outlined\" fullWidth error={area.error}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Rubro de interés</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={area.value}\r\n                        onChange={(event) => validateArea(event.target.value)}\r\n                        label=\"Rubro de interés\"\r\n                    >\r\n                        {areas.map(element =>\r\n                            <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n                        )}\r\n                        <MenuItem value=\"other\">Otro</MenuItem>\r\n                    </Select>\r\n                    {area.error && <FormHelperText>Este campo es requerido</FormHelperText>}\r\n                </FormControl>\r\n            </Grid>\r\n            {area.value === 'other' && <Grid item xs={12} md={6}>\r\n                <TextInput\r\n                    fullWidth\r\n                    label=\"Por favor, especifíque\"\r\n                    value={specificArea.value}\r\n                    onChange={(event) => validateSpecificArea(event.target.value)}\r\n                    error={specificArea.error}\r\n                    helperText={specificArea.error && \"Este campo es requerido\"}\r\n                    onKeyPress={e => onlyLetters(e)}\r\n                />\r\n            </Grid>} */}\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={hasVolunteering.error}>\r\n                    <FormLabel component=\"legend\">¿Has realizado algún tipo de voluntariado?</FormLabel>\r\n                    <RadioGroup row aria-label=\"hasVolunteering\" name=\"hasVolunteering\" value={hasVolunteering.value} onChange={(event) => validateHasVolunteering(event.target.value)}>\r\n                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Sí\" />\r\n                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                    {hasVolunteering.error && <FormHelperText>Este campo es requerido</FormHelperText>}\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={hasRotativeSchedules.error}>\r\n                    <FormLabel component=\"legend\">¿Cuenta con disponibilidad para trabajar en horarios rotativos?</FormLabel>\r\n                    <RadioGroup row aria-label=\"hasRotativeSchedules\" name=\"hasRotativeSchedules\" value={hasRotativeSchedules.value} onChange={(event) => validateHasRotativeSchedules(event.target.value)}>\r\n                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Sí\" />\r\n                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                    {hasRotativeSchedules.error && <FormHelperText>Este campo es requerido</FormHelperText>}\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={hasExtraHours.error}>\r\n                    <FormLabel component=\"legend\">¿Cuenta con disponibilidad para trabajar horas extras?</FormLabel>\r\n                    <RadioGroup row aria-label=\"hasExtraHours\" name=\"hasExtraHours\" value={hasExtraHours.value} onChange={(event) => validateHasExtraHours(event.target.value)}>\r\n                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Sí\" />\r\n                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                    {hasExtraHours.error && <FormHelperText>Este campo es requerido</FormHelperText>}\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <FormControl component=\"fieldset\" error={hasWeekend.error}>\r\n                    <FormLabel component=\"legend\">¿Cuenta con disponibilidad para trabajos fin de semana?</FormLabel>\r\n                    <RadioGroup row aria-label=\"hasWeekend\" name=\"hasWeekend\" value={hasWeekend.value} onChange={(event) => validateHasWeekend(event.target.value)}>\r\n                        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Sí\" />\r\n                        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n                    </RadioGroup>\r\n                    {hasWeekend.error && <FormHelperText>Este campo es requerido</FormHelperText>}\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} className=\"justify-end\">\r\n                <Button color=\"primary\" type=\"submit\" onClick={handleSave}>continuar</Button>\r\n            </Grid>\r\n            {/* <Grid item xs={12} className=\"justify-center\">\r\n                <Button variant=\"outlined\" size=\"large\" onClick={() => history.push('/')}>Cancelar</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Button variant=\"contained\" size=\"large\" onClick={handleSave} disabled={isButtonDisabled()}>Finalizar</Button>\r\n            </Grid> */}\r\n        </>\r\n    )\r\n}","C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\speciality.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\academicLevels.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\documentsTypes.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\global\\constants\\types\\providers.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Backdrop\\index.js",[],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\Autocomplete\\index.js",["860","861"],"C:\\apps\\Operativa\\Operativa-web-v3-Github\\OperativaWeb\\src\\modules\\shared\\components\\RichText\\index.js",["862"],"import React, { useMemo, useState, useCallback } from \"react\";\r\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { FormHelperText } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// Import the Slate editor factory.\r\nimport { createEditor, Editor, Transforms, Text } from \"slate\";\r\n// Import the Slate components and React plugin.\r\nimport { Slate, Editable, withReact } from \"slate-react\";\r\nimport \"./richText.css\"\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    return ({\r\n        editorControls: {\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n        },\r\n        editorText: (props) => {\r\n            return {\r\n                borderStyle: 'solid',\r\n                borderWidth: props.focus ? 2 : 1,\r\n                borderColor: props.focus ? '#46A9D4' : props.error ? '#f44336' : 'rgba(0, 0, 0, 0.23)',\r\n                borderRadius: 4,\r\n                minHeight: 200,\r\n                padding: 8,\r\n                textAlign: 'left'\r\n            }\r\n\r\n        },\r\n        editorHelperText: {\r\n            marginLeft: \"1rem\",\r\n            color: \"#f44336\"\r\n        }\r\n    })\r\n})\r\n\r\n// Define our own custom set of helpers.\r\nconst CustomEditor = {\r\n    isBoldMarkActive(editor) {\r\n        const [match] = Editor.nodes(editor, {\r\n            match: (n) => n.bold === true,\r\n            universal: true\r\n        });\r\n\r\n        return !!match;\r\n    },\r\n\r\n    isItalicMarkActive(editor) {\r\n        const [match] = Editor.nodes(editor, {\r\n            match: (n) => n.italic === true,\r\n            universal: true\r\n        });\r\n\r\n        return !!match;\r\n    },\r\n\r\n    isCodeBlockActive(editor) {\r\n        const [match] = Editor.nodes(editor, {\r\n            match: (n) => n.type === \"code\"\r\n        });\r\n\r\n        return !!match;\r\n    },\r\n\r\n    isListBlockActive(editor) {\r\n        const [match] = Editor.nodes(editor, {\r\n            match: (n) => n.type === \"list-item\"\r\n        });\r\n\r\n        return !!match;\r\n    },\r\n\r\n    toggleBoldMark(editor) {\r\n        const isActive = CustomEditor.isBoldMarkActive(editor);\r\n        Transforms.setNodes(\r\n            editor,\r\n            { bold: isActive ? null : true },\r\n            { match: (n) => Text.isText(n), split: true }\r\n        );\r\n    },\r\n\r\n    toggleItalicMark(editor) {\r\n        const isActive = CustomEditor.isItalicMarkActive(editor);\r\n        Transforms.setNodes(\r\n            editor,\r\n            { italic: isActive ? null : true },\r\n            { match: (n) => Text.isText(n), split: true }\r\n        );\r\n    },\r\n\r\n    toggleCodeBlock(editor) {\r\n        const isActive = CustomEditor.isCodeBlockActive(editor);\r\n        Transforms.setNodes(\r\n            editor,\r\n            { type: isActive ? null : \"code\" },\r\n            { match: (n) => Editor.isBlock(editor, n) }\r\n        );\r\n    },\r\n\r\n    toggleListBlock(editor) {\r\n        const isActive = CustomEditor.isListBlockActive(editor);\r\n        Transforms.setNodes(\r\n            editor,\r\n            { type: isActive ? null : \"list-item\" },\r\n            { match: (n) => Editor.isBlock(editor, n) }\r\n        );\r\n    }\r\n};\r\n\r\nexport default function RichText({ handleInputChange = () => { }, name, error = false, helperText, valueText, label, readOnly = false }) {\r\n    let event = { target: { name: \"\", value: \"\" } }\r\n    const editor = useMemo(() => withReact(createEditor()), []);\r\n    const [focus, setFocus] = useState(false)\r\n    const stylesProps = { error, focus }\r\n    //const content = localStorage.getItem(\"content\");\r\n    const classes = useStyles(stylesProps);\r\n    const [value, setValue] = useState(\r\n        valueText || [\r\n            {\r\n                type: \"paragraph\",\r\n                children: [{ text: \"\" }]\r\n            }\r\n        ]);\r\n\r\n    const renderElement = useCallback((props) => {\r\n        switch (props.element.type) {\r\n            case \"code\":\r\n                return <CodeElement {...props} />;\r\n            case \"list-item\":\r\n                return <ListElement {...props} />;\r\n            default:\r\n                return <DefaultElement {...props} />;\r\n        }\r\n    }, []);\r\n\r\n    const renderLeaf = useCallback((props) => {\r\n        return <Leaf {...props} />;\r\n    }, []);\r\n\r\n    const handleChange = (value) => {\r\n        event.target.name = name\r\n        event.target.value = value\r\n        setValue(value)\r\n        handleInputChange(event)\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor\">\r\n            <Slate editor={editor} value={value} onChange={handleChange}>\r\n\r\n                {\r\n                    !readOnly &&\r\n                    <div className={classes.editorControls}>\r\n                        <div className=\"editor-label\">\r\n                            <p>{label}</p>\r\n                        </div>\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"Negrita\"\r\n                                onMouseDown={(event) => {\r\n                                    event.preventDefault();\r\n                                    CustomEditor.toggleBoldMark(editor);\r\n                                }}\r\n                            >\r\n                                <FormatBoldIcon />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                aria-label=\"Italic\"\r\n                                onMouseDown={(event) => {\r\n                                    event.preventDefault();\r\n                                    CustomEditor.toggleItalicMark(editor);\r\n                                }}\r\n                            >\r\n                                <FormatItalicIcon />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                aria-label=\"Lista\"\r\n                                onMouseDown={(event) => {\r\n                                    event.preventDefault();\r\n                                    CustomEditor.toggleListBlock(editor);\r\n                                }}\r\n                            >\r\n                                <FormatListBulletedIcon />\r\n                            </IconButton>\r\n                        </div>\r\n\r\n                    </div>\r\n                }\r\n\r\n                <Editable\r\n                    className={classes.editorText}\r\n                    renderElement={renderElement}\r\n                    renderLeaf={renderLeaf}\r\n                    readOnly={readOnly}\r\n                    onFocus={() => setFocus(true)}\r\n                    onBlur={() => setFocus(false)}\r\n                    onKeyDown={(event) => {\r\n                        if (!event.ctrlKey) {\r\n                            return;\r\n                        }\r\n                        // Replace the `onKeyDown` logic with our new commands.\r\n                        switch (event.key) {\r\n                            case \"b\": {\r\n                                event.preventDefault();\r\n                                CustomEditor.toggleBoldMark(editor);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </Slate>\r\n            {focus || (error && <FormHelperText className={classes.editorHelperText}>{helperText}</FormHelperText>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CodeElement = ({ attributes, children }) => {\r\n    return (\r\n        <pre>\r\n            <code {...attributes}>{children}</code>\r\n        </pre>\r\n    );\r\n};\r\nconst ListElement = ({ attributes, children }) => {\r\n    return <li {...attributes}>{children}</li>;\r\n};\r\n\r\nconst DefaultElement = (props) => {\r\n    return <p {...props.attributes}>{props.children}</p>;\r\n};\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n    //negrita\r\n    if (leaf.bold) {\r\n        children = <strong>{children}</strong>;\r\n    }\r\n    //code\r\n    if (leaf.code) {\r\n        children = <code>{children}</code>;\r\n    }\r\n    //italic\r\n    if (leaf.italic) {\r\n        children = <em>{children}</em>;\r\n    }\r\n\r\n    if (leaf.underline) {\r\n        children = <u>{children}</u>;\r\n    }\r\n\r\n    if (leaf.strikethrough) {\r\n        children = <del>{children}</del>;\r\n    }\r\n\r\n    return <span {...attributes}>{children}</span>;\r\n};\r\n",{"ruleId":"863","replacedBy":"864"},{"ruleId":"865","replacedBy":"866"},{"ruleId":"867","severity":1,"message":"868","line":12,"column":6,"nodeType":"869","endLine":12,"endColumn":8,"suggestions":"870"},{"ruleId":"871","severity":1,"message":"872","line":3,"column":1,"nodeType":"873","endLine":5,"endColumn":3},{"ruleId":"871","severity":1,"message":"872","line":4,"column":1,"nodeType":"873","endLine":8,"endColumn":3},{"ruleId":"874","severity":1,"message":"875","line":1,"column":15,"nodeType":"876","messageId":"877","endLine":1,"endColumn":24},{"ruleId":"874","severity":1,"message":"878","line":97,"column":10,"nodeType":"876","messageId":"877","endLine":97,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":110,"column":6,"nodeType":"869","endLine":110,"endColumn":19,"suggestions":"880"},{"ruleId":"874","severity":1,"message":"881","line":127,"column":9,"nodeType":"876","messageId":"877","endLine":127,"endColumn":25},{"ruleId":"874","severity":1,"message":"882","line":135,"column":9,"nodeType":"876","messageId":"877","endLine":135,"endColumn":19},{"ruleId":"874","severity":1,"message":"883","line":139,"column":9,"nodeType":"876","messageId":"877","endLine":139,"endColumn":20},{"ruleId":"871","severity":1,"message":"872","line":19,"column":1,"nodeType":"873","endLine":19,"endColumn":46},{"ruleId":"874","severity":1,"message":"875","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"884","line":1,"column":28,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"885","line":8,"column":10,"nodeType":"876","messageId":"877","endLine":8,"endColumn":20},{"ruleId":"874","severity":1,"message":"886","line":8,"column":22,"nodeType":"876","messageId":"877","endLine":8,"endColumn":32},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"872","line":27,"column":1,"nodeType":"873","endLine":32,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"872","line":11,"column":1,"nodeType":"873","endLine":13,"endColumn":2},{"ruleId":"871","severity":1,"message":"872","line":60,"column":1,"nodeType":"873","endLine":72,"endColumn":2},{"ruleId":"871","severity":1,"message":"872","line":19,"column":1,"nodeType":"873","endLine":23,"endColumn":2},{"ruleId":"871","severity":1,"message":"872","line":18,"column":1,"nodeType":"873","endLine":22,"endColumn":2},{"ruleId":"874","severity":1,"message":"888","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"888","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"888","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"889","line":9,"column":8,"nodeType":"876","messageId":"877","endLine":9,"endColumn":12},{"ruleId":"874","severity":1,"message":"888","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"890","line":10,"column":8,"nodeType":"876","messageId":"877","endLine":10,"endColumn":21},{"ruleId":"874","severity":1,"message":"888","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"871","severity":1,"message":"872","line":4,"column":1,"nodeType":"873","endLine":11,"endColumn":2},{"ruleId":"874","severity":1,"message":"891","line":3,"column":27,"nodeType":"876","messageId":"877","endLine":3,"endColumn":35},{"ruleId":"874","severity":1,"message":"892","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":20},{"ruleId":"874","severity":1,"message":"893","line":25,"column":11,"nodeType":"876","messageId":"877","endLine":25,"endColumn":20},{"ruleId":"874","severity":1,"message":"894","line":31,"column":11,"nodeType":"876","messageId":"877","endLine":31,"endColumn":20},{"ruleId":"867","severity":1,"message":"879","line":38,"column":8,"nodeType":"869","endLine":38,"endColumn":10,"suggestions":"895"},{"ruleId":"867","severity":1,"message":"896","line":50,"column":8,"nodeType":"869","endLine":50,"endColumn":10,"suggestions":"897"},{"ruleId":"874","severity":1,"message":"884","line":1,"column":28,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"898","line":5,"column":23,"nodeType":"876","messageId":"877","endLine":5,"endColumn":29},{"ruleId":"874","severity":1,"message":"899","line":13,"column":11,"nodeType":"876","messageId":"877","endLine":13,"endColumn":19},{"ruleId":"874","severity":1,"message":"900","line":21,"column":11,"nodeType":"876","messageId":"877","endLine":21,"endColumn":31},{"ruleId":"874","severity":1,"message":"901","line":18,"column":11,"nodeType":"876","messageId":"877","endLine":18,"endColumn":18},{"ruleId":"902","severity":1,"message":"903","line":32,"column":92,"nodeType":"904","messageId":"905","endLine":32,"endColumn":94},{"ruleId":"902","severity":1,"message":"906","line":38,"column":25,"nodeType":"904","messageId":"905","endLine":38,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":39,"column":53,"nodeType":"904","messageId":"905","endLine":39,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":44,"column":9,"nodeType":"876","messageId":"877","endLine":44,"endColumn":18},{"ruleId":"902","severity":1,"message":"906","line":31,"column":25,"nodeType":"904","messageId":"905","endLine":31,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":32,"column":53,"nodeType":"904","messageId":"905","endLine":32,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":37,"column":9,"nodeType":"876","messageId":"877","endLine":37,"endColumn":18},{"ruleId":"874","severity":1,"message":"875","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"908","line":11,"column":34,"nodeType":"876","messageId":"877","endLine":11,"endColumn":42},{"ruleId":"874","severity":1,"message":"909","line":14,"column":19,"nodeType":"876","messageId":"877","endLine":14,"endColumn":26},{"ruleId":"874","severity":1,"message":"910","line":25,"column":29,"nodeType":"876","messageId":"877","endLine":25,"endColumn":47},{"ruleId":"867","severity":1,"message":"868","line":47,"column":7,"nodeType":"869","endLine":47,"endColumn":21,"suggestions":"911"},{"ruleId":"874","severity":1,"message":"912","line":12,"column":24,"nodeType":"876","messageId":"877","endLine":12,"endColumn":31},{"ruleId":"874","severity":1,"message":"913","line":22,"column":20,"nodeType":"876","messageId":"877","endLine":22,"endColumn":24},{"ruleId":"902","severity":1,"message":"906","line":40,"column":25,"nodeType":"904","messageId":"905","endLine":40,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":41,"column":53,"nodeType":"904","messageId":"905","endLine":41,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":46,"column":9,"nodeType":"876","messageId":"877","endLine":46,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":23,"column":8,"nodeType":"869","endLine":23,"endColumn":10,"suggestions":"914"},{"ruleId":"902","severity":1,"message":"906","line":30,"column":36,"nodeType":"904","messageId":"905","endLine":30,"endColumn":38},{"ruleId":"874","severity":1,"message":"915","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":26,"column":7,"nodeType":"869","endLine":26,"endColumn":9,"suggestions":"916"},{"ruleId":"902","severity":1,"message":"906","line":29,"column":59,"nodeType":"904","messageId":"905","endLine":29,"endColumn":61},{"ruleId":"874","severity":1,"message":"917","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":23},{"ruleId":"867","severity":1,"message":"879","line":38,"column":8,"nodeType":"869","endLine":38,"endColumn":24,"suggestions":"918"},{"ruleId":"902","severity":1,"message":"906","line":47,"column":54,"nodeType":"904","messageId":"905","endLine":47,"endColumn":56},{"ruleId":"874","severity":1,"message":"919","line":3,"column":32,"nodeType":"876","messageId":"877","endLine":3,"endColumn":42},{"ruleId":"867","severity":1,"message":"920","line":32,"column":7,"nodeType":"869","endLine":32,"endColumn":9,"suggestions":"921"},{"ruleId":"922","severity":1,"message":"923","line":128,"column":53,"nodeType":"924","endLine":128,"endColumn":81},{"ruleId":"922","severity":1,"message":"923","line":152,"column":53,"nodeType":"924","endLine":152,"endColumn":76},{"ruleId":"922","severity":1,"message":"923","line":175,"column":53,"nodeType":"924","endLine":175,"endColumn":82},{"ruleId":"925","severity":1,"message":"926","line":355,"column":42,"nodeType":"927","messageId":"928","endLine":355,"endColumn":44},{"ruleId":"925","severity":1,"message":"926","line":355,"column":65,"nodeType":"927","messageId":"928","endLine":355,"endColumn":67},{"ruleId":"874","severity":1,"message":"929","line":59,"column":11,"nodeType":"876","messageId":"877","endLine":59,"endColumn":22},{"ruleId":"902","severity":1,"message":"906","line":102,"column":25,"nodeType":"904","messageId":"905","endLine":102,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":103,"column":53,"nodeType":"904","messageId":"905","endLine":103,"endColumn":55},{"ruleId":"867","severity":1,"message":"930","line":125,"column":8,"nodeType":"869","endLine":125,"endColumn":10,"suggestions":"931"},{"ruleId":"867","severity":1,"message":"932","line":129,"column":8,"nodeType":"869","endLine":129,"endColumn":19,"suggestions":"933"},{"ruleId":"867","severity":1,"message":"934","line":133,"column":8,"nodeType":"869","endLine":133,"endColumn":19,"suggestions":"935"},{"ruleId":"902","severity":1,"message":"906","line":136,"column":77,"nodeType":"904","messageId":"905","endLine":136,"endColumn":79},{"ruleId":"902","severity":1,"message":"906","line":141,"column":75,"nodeType":"904","messageId":"905","endLine":141,"endColumn":77},{"ruleId":"902","severity":1,"message":"906","line":188,"column":83,"nodeType":"904","messageId":"905","endLine":188,"endColumn":85},{"ruleId":"902","severity":1,"message":"906","line":197,"column":81,"nodeType":"904","messageId":"905","endLine":197,"endColumn":83},{"ruleId":"867","severity":1,"message":"879","line":33,"column":6,"nodeType":"869","endLine":33,"endColumn":8,"suggestions":"936"},{"ruleId":"922","severity":1,"message":"923","line":127,"column":7,"nodeType":"924","endLine":127,"endColumn":24},{"ruleId":"871","severity":1,"message":"887","line":1,"column":1,"nodeType":"873","endLine":49,"endColumn":4},{"ruleId":"874","severity":1,"message":"937","line":84,"column":13,"nodeType":"876","messageId":"877","endLine":84,"endColumn":21},{"ruleId":"874","severity":1,"message":"937","line":103,"column":13,"nodeType":"876","messageId":"877","endLine":103,"endColumn":21},{"ruleId":"874","severity":1,"message":"937","line":127,"column":13,"nodeType":"876","messageId":"877","endLine":127,"endColumn":21},{"ruleId":"874","severity":1,"message":"937","line":152,"column":13,"nodeType":"876","messageId":"877","endLine":152,"endColumn":21},{"ruleId":"874","severity":1,"message":"938","line":1,"column":8,"nodeType":"876","messageId":"877","endLine":1,"endColumn":13},{"ruleId":"902","severity":1,"message":"903","line":18,"column":66,"nodeType":"904","messageId":"905","endLine":18,"endColumn":68},{"ruleId":"902","severity":1,"message":"903","line":18,"column":77,"nodeType":"904","messageId":"905","endLine":18,"endColumn":79},{"ruleId":"902","severity":1,"message":"906","line":19,"column":66,"nodeType":"904","messageId":"905","endLine":19,"endColumn":68},{"ruleId":"867","severity":1,"message":"939","line":23,"column":8,"nodeType":"869","endLine":23,"endColumn":16,"suggestions":"940"},{"ruleId":"874","severity":1,"message":"941","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":20},{"ruleId":"902","severity":1,"message":"906","line":64,"column":25,"nodeType":"904","messageId":"905","endLine":64,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":65,"column":53,"nodeType":"904","messageId":"905","endLine":65,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":71,"column":9,"nodeType":"876","messageId":"877","endLine":71,"endColumn":18},{"ruleId":"902","severity":1,"message":"906","line":81,"column":20,"nodeType":"904","messageId":"905","endLine":81,"endColumn":22},{"ruleId":"902","severity":1,"message":"906","line":137,"column":88,"nodeType":"904","messageId":"905","endLine":137,"endColumn":90},{"ruleId":"902","severity":1,"message":"906","line":34,"column":25,"nodeType":"904","messageId":"905","endLine":34,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":35,"column":53,"nodeType":"904","messageId":"905","endLine":35,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":41,"column":9,"nodeType":"876","messageId":"877","endLine":41,"endColumn":18},{"ruleId":"874","severity":1,"message":"884","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":25},{"ruleId":"902","severity":1,"message":"906","line":23,"column":43,"nodeType":"904","messageId":"905","endLine":23,"endColumn":45},{"ruleId":"922","severity":1,"message":"923","line":33,"column":21,"nodeType":"924","endLine":33,"endColumn":43},{"ruleId":"902","severity":1,"message":"906","line":64,"column":34,"nodeType":"904","messageId":"905","endLine":64,"endColumn":36},{"ruleId":"902","severity":1,"message":"906","line":31,"column":26,"nodeType":"904","messageId":"905","endLine":31,"endColumn":28},{"ruleId":"902","severity":1,"message":"906","line":41,"column":25,"nodeType":"904","messageId":"905","endLine":41,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":42,"column":53,"nodeType":"904","messageId":"905","endLine":42,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":47,"column":9,"nodeType":"876","messageId":"877","endLine":47,"endColumn":18},{"ruleId":"874","severity":1,"message":"942","line":6,"column":10,"nodeType":"876","messageId":"877","endLine":6,"endColumn":17},{"ruleId":"874","severity":1,"message":"943","line":7,"column":8,"nodeType":"876","messageId":"877","endLine":7,"endColumn":22},{"ruleId":"874","severity":1,"message":"944","line":8,"column":8,"nodeType":"876","messageId":"877","endLine":8,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":269,"column":8,"nodeType":"869","endLine":269,"endColumn":10,"suggestions":"945"},{"ruleId":"874","severity":1,"message":"946","line":346,"column":11,"nodeType":"876","messageId":"877","endLine":346,"endColumn":28},{"ruleId":"874","severity":1,"message":"947","line":3,"column":8,"nodeType":"876","messageId":"877","endLine":3,"endColumn":12},{"ruleId":"874","severity":1,"message":"942","line":6,"column":10,"nodeType":"876","messageId":"877","endLine":6,"endColumn":17},{"ruleId":"874","severity":1,"message":"944","line":7,"column":8,"nodeType":"876","messageId":"877","endLine":7,"endColumn":18},{"ruleId":"874","severity":1,"message":"948","line":9,"column":115,"nodeType":"876","messageId":"877","endLine":9,"endColumn":122},{"ruleId":"874","severity":1,"message":"949","line":9,"column":131,"nodeType":"876","messageId":"877","endLine":9,"endColumn":138},{"ruleId":"874","severity":1,"message":"950","line":9,"column":140,"nodeType":"876","messageId":"877","endLine":9,"endColumn":150},{"ruleId":"874","severity":1,"message":"898","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":16},{"ruleId":"874","severity":1,"message":"951","line":10,"column":18,"nodeType":"876","messageId":"877","endLine":10,"endColumn":26},{"ruleId":"874","severity":1,"message":"952","line":21,"column":5,"nodeType":"876","messageId":"877","endLine":21,"endColumn":19},{"ruleId":"874","severity":1,"message":"953","line":22,"column":5,"nodeType":"876","messageId":"877","endLine":22,"endColumn":13},{"ruleId":"874","severity":1,"message":"954","line":23,"column":5,"nodeType":"876","messageId":"877","endLine":23,"endColumn":13},{"ruleId":"874","severity":1,"message":"955","line":24,"column":5,"nodeType":"876","messageId":"877","endLine":24,"endColumn":15},{"ruleId":"874","severity":1,"message":"956","line":25,"column":5,"nodeType":"876","messageId":"877","endLine":25,"endColumn":15},{"ruleId":"874","severity":1,"message":"957","line":96,"column":9,"nodeType":"876","messageId":"877","endLine":96,"endColumn":25},{"ruleId":"874","severity":1,"message":"958","line":99,"column":9,"nodeType":"876","messageId":"877","endLine":99,"endColumn":20},{"ruleId":"874","severity":1,"message":"959","line":100,"column":9,"nodeType":"876","messageId":"877","endLine":100,"endColumn":17},{"ruleId":"874","severity":1,"message":"960","line":190,"column":11,"nodeType":"876","messageId":"877","endLine":190,"endColumn":20},{"ruleId":"867","severity":1,"message":"879","line":194,"column":8,"nodeType":"869","endLine":194,"endColumn":10,"suggestions":"961"},{"ruleId":"874","severity":1,"message":"946","line":234,"column":11,"nodeType":"876","messageId":"877","endLine":234,"endColumn":28},{"ruleId":"962","severity":1,"message":"963","line":275,"column":37,"nodeType":"964","messageId":"965","endLine":275,"endColumn":93},{"ruleId":"874","severity":1,"message":"966","line":276,"column":43,"nodeType":"876","messageId":"877","endLine":276,"endColumn":50},{"ruleId":"871","severity":1,"message":"887","line":1,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":10,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":1,"column":1,"nodeType":"873","endLine":11,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":14,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"871","severity":1,"message":"887","line":3,"column":1,"nodeType":"873","endLine":6,"endColumn":2},{"ruleId":"902","severity":1,"message":"906","line":75,"column":16,"nodeType":"904","messageId":"905","endLine":75,"endColumn":18},{"ruleId":"902","severity":1,"message":"906","line":77,"column":23,"nodeType":"904","messageId":"905","endLine":77,"endColumn":25},{"ruleId":"874","severity":1,"message":"967","line":9,"column":10,"nodeType":"876","messageId":"877","endLine":9,"endColumn":14},{"ruleId":"874","severity":1,"message":"884","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":25},{"ruleId":"874","severity":1,"message":"907","line":31,"column":9,"nodeType":"876","messageId":"877","endLine":31,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":40,"column":8,"nodeType":"869","endLine":40,"endColumn":10,"suggestions":"968"},{"ruleId":"874","severity":1,"message":"969","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":17},{"ruleId":"874","severity":1,"message":"970","line":2,"column":50,"nodeType":"876","messageId":"877","endLine":2,"endColumn":64},{"ruleId":"874","severity":1,"message":"971","line":2,"column":66,"nodeType":"876","messageId":"877","endLine":2,"endColumn":75},{"ruleId":"874","severity":1,"message":"972","line":2,"column":83,"nodeType":"876","messageId":"877","endLine":2,"endColumn":93},{"ruleId":"874","severity":1,"message":"891","line":2,"column":95,"nodeType":"876","messageId":"877","endLine":2,"endColumn":103},{"ruleId":"874","severity":1,"message":"973","line":2,"column":117,"nodeType":"876","messageId":"877","endLine":2,"endColumn":123},{"ruleId":"874","severity":1,"message":"974","line":2,"column":125,"nodeType":"876","messageId":"877","endLine":2,"endColumn":135},{"ruleId":"874","severity":1,"message":"975","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":19},{"ruleId":"874","severity":1,"message":"976","line":5,"column":33,"nodeType":"876","messageId":"877","endLine":5,"endColumn":48},{"ruleId":"874","severity":1,"message":"977","line":6,"column":8,"nodeType":"876","messageId":"877","endLine":6,"endColumn":31},{"ruleId":"867","severity":1,"message":"978","line":35,"column":8,"nodeType":"869","endLine":35,"endColumn":18,"suggestions":"979"},{"ruleId":"902","severity":1,"message":"906","line":46,"column":25,"nodeType":"904","messageId":"905","endLine":46,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":47,"column":53,"nodeType":"904","messageId":"905","endLine":47,"endColumn":55},{"ruleId":"867","severity":1,"message":"980","line":79,"column":8,"nodeType":"869","endLine":79,"endColumn":25,"suggestions":"981"},{"ruleId":"902","severity":1,"message":"906","line":83,"column":19,"nodeType":"904","messageId":"905","endLine":83,"endColumn":21},{"ruleId":"867","severity":1,"message":"982","line":91,"column":8,"nodeType":"869","endLine":91,"endColumn":30,"suggestions":"983"},{"ruleId":"902","severity":1,"message":"906","line":43,"column":25,"nodeType":"904","messageId":"905","endLine":43,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":44,"column":53,"nodeType":"904","messageId":"905","endLine":44,"endColumn":55},{"ruleId":"867","severity":1,"message":"984","line":72,"column":8,"nodeType":"869","endLine":72,"endColumn":23,"suggestions":"985"},{"ruleId":"867","severity":1,"message":"986","line":76,"column":8,"nodeType":"869","endLine":76,"endColumn":23,"suggestions":"987"},{"ruleId":"902","severity":1,"message":"906","line":114,"column":81,"nodeType":"904","messageId":"905","endLine":114,"endColumn":83},{"ruleId":"902","severity":1,"message":"906","line":120,"column":79,"nodeType":"904","messageId":"905","endLine":120,"endColumn":81},{"ruleId":"874","severity":1,"message":"988","line":7,"column":36,"nodeType":"876","messageId":"877","endLine":7,"endColumn":41},{"ruleId":"902","severity":1,"message":"906","line":59,"column":25,"nodeType":"904","messageId":"905","endLine":59,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":60,"column":53,"nodeType":"904","messageId":"905","endLine":60,"endColumn":55},{"ruleId":"902","severity":1,"message":"903","line":88,"column":91,"nodeType":"904","messageId":"905","endLine":88,"endColumn":93},{"ruleId":"902","severity":1,"message":"906","line":50,"column":25,"nodeType":"904","messageId":"905","endLine":50,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":51,"column":53,"nodeType":"904","messageId":"905","endLine":51,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":56,"column":9,"nodeType":"876","messageId":"877","endLine":56,"endColumn":18},{"ruleId":"867","severity":1,"message":"879","line":66,"column":8,"nodeType":"869","endLine":66,"endColumn":10,"suggestions":"989"},{"ruleId":"874","severity":1,"message":"884","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":25},{"ruleId":"874","severity":1,"message":"875","line":1,"column":27,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"969","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":17},{"ruleId":"874","severity":1,"message":"990","line":2,"column":19,"nodeType":"876","messageId":"877","endLine":2,"endColumn":30},{"ruleId":"874","severity":1,"message":"970","line":2,"column":32,"nodeType":"876","messageId":"877","endLine":2,"endColumn":46},{"ruleId":"874","severity":1,"message":"972","line":2,"column":54,"nodeType":"876","messageId":"877","endLine":2,"endColumn":64},{"ruleId":"874","severity":1,"message":"891","line":2,"column":66,"nodeType":"876","messageId":"877","endLine":2,"endColumn":74},{"ruleId":"874","severity":1,"message":"973","line":2,"column":76,"nodeType":"876","messageId":"877","endLine":2,"endColumn":82},{"ruleId":"902","severity":1,"message":"906","line":37,"column":25,"nodeType":"904","messageId":"905","endLine":37,"endColumn":27},{"ruleId":"902","severity":1,"message":"906","line":38,"column":53,"nodeType":"904","messageId":"905","endLine":38,"endColumn":55},{"ruleId":"874","severity":1,"message":"907","line":43,"column":9,"nodeType":"876","messageId":"877","endLine":43,"endColumn":18},{"ruleId":"874","severity":1,"message":"975","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":19},{"ruleId":"874","severity":1,"message":"991","line":29,"column":22,"nodeType":"876","messageId":"877","endLine":29,"endColumn":33},{"ruleId":"867","severity":1,"message":"992","line":90,"column":8,"nodeType":"869","endLine":90,"endColumn":23,"suggestions":"993"},{"ruleId":"902","severity":1,"message":"906","line":344,"column":24,"nodeType":"904","messageId":"905","endLine":344,"endColumn":26},{"ruleId":"902","severity":1,"message":"906","line":367,"column":36,"nodeType":"904","messageId":"905","endLine":367,"endColumn":38},{"ruleId":"874","severity":1,"message":"994","line":2,"column":8,"nodeType":"876","messageId":"877","endLine":2,"endColumn":14},{"ruleId":"874","severity":1,"message":"969","line":3,"column":10,"nodeType":"876","messageId":"877","endLine":3,"endColumn":17},{"ruleId":"874","severity":1,"message":"972","line":3,"column":83,"nodeType":"876","messageId":"877","endLine":3,"endColumn":93},{"ruleId":"874","severity":1,"message":"891","line":3,"column":95,"nodeType":"876","messageId":"877","endLine":3,"endColumn":103},{"ruleId":"874","severity":1,"message":"973","line":3,"column":117,"nodeType":"876","messageId":"877","endLine":3,"endColumn":123},{"ruleId":"874","severity":1,"message":"974","line":3,"column":125,"nodeType":"876","messageId":"877","endLine":3,"endColumn":135},{"ruleId":"874","severity":1,"message":"995","line":5,"column":25,"nodeType":"876","messageId":"877","endLine":5,"endColumn":34},{"ruleId":"874","severity":1,"message":"975","line":6,"column":10,"nodeType":"876","messageId":"877","endLine":6,"endColumn":19},{"ruleId":"874","severity":1,"message":"976","line":6,"column":21,"nodeType":"876","messageId":"877","endLine":6,"endColumn":36},{"ruleId":"874","severity":1,"message":"996","line":7,"column":10,"nodeType":"876","messageId":"877","endLine":7,"endColumn":21},{"ruleId":"874","severity":1,"message":"997","line":18,"column":12,"nodeType":"876","messageId":"877","endLine":18,"endColumn":17},{"ruleId":"874","severity":1,"message":"998","line":18,"column":19,"nodeType":"876","messageId":"877","endLine":18,"endColumn":27},{"ruleId":"867","severity":1,"message":"999","line":28,"column":8,"nodeType":"869","endLine":28,"endColumn":14,"suggestions":"1000"},{"ruleId":"874","severity":1,"message":"1001","line":51,"column":11,"nodeType":"876","messageId":"877","endLine":51,"endColumn":23},{"ruleId":"874","severity":1,"message":"1002","line":52,"column":11,"nodeType":"876","messageId":"877","endLine":52,"endColumn":31},{"ruleId":"874","severity":1,"message":"1003","line":63,"column":11,"nodeType":"876","messageId":"877","endLine":63,"endColumn":30},{"ruleId":"874","severity":1,"message":"1004","line":13,"column":12,"nodeType":"876","messageId":"877","endLine":13,"endColumn":19},{"ruleId":"867","severity":1,"message":"1005","line":24,"column":8,"nodeType":"869","endLine":24,"endColumn":10,"suggestions":"1006"},{"ruleId":"1007","severity":1,"message":"1008","line":204,"column":25,"nodeType":"1009","messageId":"1010","endLine":210,"endColumn":26},"no-native-reassign",["1011"],"no-negated-in-lhs",["1012"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1013"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'anchorEl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1014"],"'handleDrawerOpen' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'useState' is defined but never used.","'HomeRoutes' is defined but never used.","'HomeRouter' is defined but never used.","Assign arrow function to a variable before exporting as module default","'Route' is defined but never used.","'Home' is defined but never used.","'DataTableUser' is defined but never used.","'MenuItem' is defined but never used.","'getPeriods' is defined but never used.","'dateLocal' is assigned a value but never used.","'goForward' is assigned a value but never used.",["1015"],"React Hook useEffect has missing dependencies: 'districts', 'items', 'periods', and 'publicationSelected'. Either include them or remove the dependency array.",["1016"],"'Button' is defined but never used.","'dispatch' is assigned a value but never used.","'goToPublishApplicant' is assigned a value but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'setValues' is assigned a value but never used.","'Backdrop' is defined but never used.","'signOut' is defined but never used.","'setAreasOfInterest' is assigned a value but never used.",["1017"],"'setUser' is defined but never used.","'user' is assigned a value but never used.",["1018"],"'DateTime' is defined but never used.",["1019"],"'NearMeTwoTone' is defined but never used.",["1020"],"'makeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'postulant_id'. Either include them or remove the dependency array.",["1021"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'convertJson' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getDepartments', 'getDistrics', and 'getProvinces'. Either include them or remove the dependency array.",["1022"],"React Hook useEffect has a missing dependency: 'filterProvinces'. Either include it or remove the dependency array.",["1023"],"React Hook useEffect has a missing dependency: 'filterDistricts'. Either include it or remove the dependency array.",["1024"],["1025"],"'response' is assigned a value but never used.","'React' is defined but never used.","React Hook useMemo has a missing dependency: 'errors'. Either include it or remove the dependency array.",["1026"],"'useHistory' is defined but never used.","'lighten' is defined but never used.","'VisibilityIcon' is defined but never used.","'DeleteIcon' is defined but never used.",["1027"],"'handleChangeDense' is assigned a value but never used.","'clsx' is defined but never used.","'Toolbar' is defined but never used.","'Tooltip' is defined but never used.","'IconButton' is defined but never used.","'Checkbox' is defined but never used.","'registeredIcon' is defined but never used.","'editIcon' is defined but never used.","'fileIcon' is defined but never used.","'folderIcon' is defined but never used.","'deleteIcon' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'initRoute' is assigned a value but never used.",["1028"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'labelId' is assigned a value but never used.","'Link' is defined but never used.",["1029"],"'Divider' is defined but never used.","'FormHelperText' is defined but never used.","'FormLabel' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'Typography' is defined but never used.","'areasList' is defined but never used.","'specialtiesList' is defined but never used.","'WithExperienceComponent' is defined but never used.","React Hook useEffect has a missing dependency: 'hasExperience'. Either include it or remove the dependency array. You can also do a functional update 'setHasExperience(h => ...)' if you only need 'hasExperience' in the 'setHasExperience' call.",["1030"],"React Hook useEffect has missing dependencies: 'setValues' and 'values'. Either include them or remove the dependency array.",["1031"],"React Hook useEffect has missing dependencies: 'errors', 'setErrors', 'setValues', and 'values'. Either include them or remove the dependency array.",["1032"],"React Hook useEffect has missing dependencies: 'getFilteredProvinces' and 'values.department_id'. Either include them or remove the dependency array.",["1033"],"React Hook useEffect has missing dependencies: 'getFilteredDistricts' and 'values.province_id'. Either include them or remove the dependency array.",["1034"],"'isRuc' is defined but never used.",["1035"],"'FormControl' is defined but never used.","'setIsHidden' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleUpdateWorkExperience'. Either include it or remove the dependency array. If 'handleUpdateWorkExperience' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1036"],"'moment' is defined but never used.","'TextInput' is defined but never used.","'onlyLetters' is defined but never used.","'areas' is assigned a value but never used.","'setAreas' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hasExtraHours', 'hasRotativeSchedules', 'hasVolunteering', 'hasWeekend', 'userData?.extra_hours', 'userData?.rotating_schedule', 'userData?.volunteering', and 'userData?.work_weekend'. Either include them or remove the dependency array. You can also do a functional update 'setHasVolunteering(h => ...)' if you only need 'hasVolunteering' in the 'setHasVolunteering' call.",["1037"],"'validateArea' is assigned a value but never used.","'validateSpecificArea' is assigned a value but never used.","'handleClickNextStep' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1038"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1043","fix":"1049"},{"desc":"1043","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1043","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1043","fix":"1064"},{"desc":"1043","fix":"1065"},{"desc":"1043","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1071","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1043","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1080","fix":"1081"},{"desc":"1043","fix":"1082"},"Update the dependencies array to be: [history]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [dispatch, showLoading]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [dispatch]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [districts, items, periods, publicationSelected]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [history, signUpSucces]",{"range":"1091","text":"1092"},{"range":"1093","text":"1088"},{"range":"1094","text":"1088"},"Update the dependencies array to be: [dispatch, publication_id]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [dispatch, postulant_id]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [dispatch, getDepartments, getDistrics, getProvinces]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [filterProvinces, provinces]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [districts, filterDistricts]",{"range":"1103","text":"1104"},{"range":"1105","text":"1088"},"Update the dependencies array to be: [errors, values]",{"range":"1106","text":"1107"},{"range":"1108","text":"1088"},{"range":"1109","text":"1088"},{"range":"1110","text":"1088"},"Update the dependencies array to be: [hasExperience, userData]",{"range":"1111","text":"1112"},"Update the dependencies array to be: [setValues, values, values.level_id]",{"range":"1113","text":"1114"},"Update the dependencies array to be: [errors, setErrors, setValues, values, values.speciality_id]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [baseProvinces, getFilteredProvinces, values.department_id]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [baseDistricts, getFilteredDistricts, values.province_id]",{"range":"1119","text":"1120"},{"range":"1121","text":"1088"},"Update the dependencies array to be: [values, index, handleUpdateWorkExperience]",{"range":"1122","text":"1123"},"Update the dependencies array to be: [hasExtraHours, hasRotativeSchedules, hasVolunteering, hasWeekend, user, userData?.extra_hours, userData?.rotating_schedule, userData?.volunteering, userData?.work_weekend]",{"range":"1124","text":"1125"},{"range":"1126","text":"1088"},[294,296],"[history]",[3662,3675],"[dispatch, showLoading]",[1478,1480],"[dispatch]",[1934,1936],"[districts, items, periods, publicationSelected]",[1662,1676],"[history, signUpSucces]",[808,810],[1237,1239],[1380,1396],"[dispatch, publication_id]",[1491,1493],"[dispatch, postulant_id]",[5521,5523],"[dispatch, getDepartments, getDistrics, getProvinces]",[5585,5596],"[filterProvinces, provinces]",[5658,5669],"[districts, filterDistricts]",[1268,1270],[911,919],"[errors, values]",[8781,8783],[5930,5932],[1205,1207],[1455,1465],"[hasExperience, userData]",[3215,3232],"[setValues, values, values.level_id]",[3660,3682],"[errors, setErrors, setValues, values, values.speciality_id]",[2798,2813],"[baseProvinces, getFilteredProvinces, values.department_id]",[2899,2914],"[baseDistricts, getFilteredDistricts, values.province_id]",[2870,2872],[3970,3985],"[values, index, handleUpdateWorkExperience]",[2076,2082],"[hasExtraHours, hasRotativeSchedules, hasVolunteering, hasWeekend, user, userData?.extra_hours, userData?.rotating_schedule, userData?.volunteering, userData?.work_weekend]",[930,932]]